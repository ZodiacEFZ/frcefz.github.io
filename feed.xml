<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Team 9036 | Zodiac</title>
    <description>Team 9036 Zodiac is an FRC Team set up in May, 2016.</description>
    <link>http://frc.hsefz.org/</link>
    <atom:link href="http://frc.hsefz.org/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 23 Aug 2016 03:39:57 +0000</pubDate>
    <lastBuildDate>Tue, 23 Aug 2016 03:39:57 +0000</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>向机器人项目中添加指令和子系统</title>
        <description>&lt;blockquote class=&quot;blockquote&quot;&gt;&lt;p&gt;原文：&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/13809/l/599734-adding-commands-and-subsystems-to-the-project&quot;&gt;Adding Commands and Subsystems to the project&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;指令和子系统都是以类的形式被创建的。WPILib 开发插件内置了指令和子系统的程序模板。你可以直接添加它们。&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;添加子系统&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/adding-commands-and-subsystems-to-the-project/1-9ccf3ad98f5ca61566cea76f930568726062862b2938bc86bee1b32961efe9e7.png&quot; width=&quot;640&quot; height=&quot;224&quot; alt=&quot;adding-commands-and-subsystems-to-the-project/1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;右键点击项目名，并选择 New - Subsystem。&lt;/p&gt;

&lt;h2&gt;命名子系统&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/adding-commands-and-subsystems-to-the-project/2-aa272e32c6f31a635a1f540fe87825b0dd3f9ba70edc02d26ee961f1b883c0c5.png&quot; width=&quot;524&quot; height=&quot;431&quot; alt=&quot;adding-commands-and-subsystems-to-the-project/2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在文本框中填写子系统名称。因为这个名称是程序中的类名，所以请指定一个符合编程语言语法的名称。&lt;/p&gt;

&lt;h2&gt;所有子系统&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/adding-commands-and-subsystems-to-the-project/3-1d52473e57a16c3d4d5860b9aab410aaecbda976dd386dd5fd284bcb10427d35.png&quot; width=&quot;312&quot; height=&quot;341&quot; alt=&quot;adding-commands-and-subsystems-to-the-project/3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;你可以在 &lt;code&gt;Subsystems&lt;/code&gt; (C++) 或 &lt;code&gt;org.usfirst.frc.teamxxxx.robot.subsystems&lt;/code&gt; (Java) 目录中查看所有新建的子系统。欲了解如何完善一个子系统，请参见“简单的子系统”这篇文章。&lt;/p&gt;

&lt;h2&gt;添加指令&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/adding-commands-and-subsystems-to-the-project/4-9b12485ddf6d0647b7699674c7be53149196c2964b38c2b24ff297f7c04a7b6d.png&quot; width=&quot;640&quot; height=&quot;191&quot; alt=&quot;adding-commands-and-subsystems-to-the-project/4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;指令的添加步骤与子系统的添加类似。右键点击项目名，选择 New - Command。&lt;/p&gt;

&lt;h2&gt;命名指令&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/adding-commands-and-subsystems-to-the-project/5-edd3c805e2be1bb7a3d5a186203a06dad58f8beaec2036695aefa6fe7067a66f.png&quot; width=&quot;524&quot; height=&quot;422&quot; alt=&quot;adding-commands-and-subsystems-to-the-project/5.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;Class Name&lt;/code&gt; 中输入指令名。因为这个名称是程序中的类名，所以请指定一个符合编程语言语法的名称。&lt;/p&gt;

&lt;h2&gt;所有指令&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/adding-commands-and-subsystems-to-the-project/6-4e28c24e3a5bbfc47e5ecf1347457a159524ba5c23d69296852008d563d84e6b.png&quot; width=&quot;448&quot; height=&quot;262&quot; alt=&quot;adding-commands-and-subsystems-to-the-project/6.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;你可以在 &lt;code&gt;Commands&lt;/code&gt; (C++) 或 &lt;code&gt;org.usfirst.frc.teamxxxx.robot.commands&lt;/code&gt; (Java) 中查看所有新建的子系统。欲了解如何完善一个指令，请参见“创建简单的指令”这篇文章。&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Aug 2016 03:24:19 +0000</pubDate>
        <link>http://frc.hsefz.org/command-based%20programming/programming/2016/08/23/adding-commands-and-subsystems-to-the-project.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/command-based%20programming/programming/2016/08/23/adding-commands-and-subsystems-to-the-project.html</guid>
        
        <category>机器人</category>
        
        <category>Java</category>
        
        <category>编程</category>
        
        <category>翻译</category>
        
        
        <category>command-based programming</category>
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>创建机器人项目</title>
        <description>&lt;blockquote class=&quot;blockquote&quot;&gt;&lt;p&gt;原文：&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/13809/l/599733-creating-a-robot-project&quot;&gt;Creating a robot project&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;创建项目&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/creating-a-robot-project/1-6288290ebae7d86231fb220c3f6431ba98812c2076958d84b760c5c2f64aa40f.png&quot; width=&quot;640&quot; height=&quot;132&quot; alt=&quot;creating-a-robot-project/1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;右键点击 Project Explorer 中的空白区域，选择 &lt;code&gt;New&lt;/code&gt; - &lt;code&gt;Project...&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;选择项目类型&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/creating-a-robot-project/2-fedc1bff39f1db539f2e4d081afa2fb01f4b533e6fdae4e2d4cea8c3d047278b.png&quot; width=&quot;526&quot; height=&quot;409&quot; alt=&quot;creating-a-robot-project/2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;展开 WPILib Robot C++ Development / WPILib Robot Java Development 文件夹，选择合适的项目类型
(Robot C++ Project 或 Robot Java Project)。你只能看到你安装过的项目类型。&lt;/p&gt;

&lt;h2&gt;选择项目骨架&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/creating-a-robot-project/3-a49b157fa7baae3c30747e244f29a0c681f5f76d72715d2ebbee46e0590e3c21.png&quot; width=&quot;534&quot; height=&quot;332&quot; alt=&quot;creating-a-robot-project/3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在文本框中给项目命名，然后选择 Command-Based Robot 单选框。&lt;/p&gt;

&lt;h2&gt;在 Project Explorer 中浏览项目骨架&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/creating-a-robot-project/4-457f41a80af0cbbaf461d54746d447c6d89f791b292849584e085bf2b9dc531e.png&quot; width=&quot;474&quot; height=&quot;344&quot; alt=&quot;creating-a-robot-project/4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;注意你当前浏览的可能是其他项目。请选择一个目录下有 &lt;code&gt;commands&lt;/code&gt; 和 &lt;code&gt;subsystems&lt;/code&gt; 的项目。&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Aug 2016 03:14:44 +0000</pubDate>
        <link>http://frc.hsefz.org/command-based%20programming/programming/2016/08/23/creating-a-robot-project.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/command-based%20programming/programming/2016/08/23/creating-a-robot-project.html</guid>
        
        <category>机器人</category>
        
        <category>Java</category>
        
        <category>编程</category>
        
        <category>翻译</category>
        
        
        <category>command-based programming</category>
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>什么是指令式编程</title>
        <description>&lt;blockquote class=&quot;blockquote&quot;&gt;&lt;p&gt;原文：&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/13809/l/599732-what-is-command-based-programming&quot;&gt;What is Command based programming&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;WPILib 支持通过“指令式编程” —— 一种帮助我们更好地管理机器人工程代码的设计模式 —— 来编写机器人程序。机器人程序和一般的视窗程序不同的地方有：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;行为按次序执行。比如射出飞盘、提升升降装置、在目标地点放置一个管子等等由许多小动作组合而成的&lt;strong&gt;一系列&lt;/strong&gt;动作。&lt;/li&gt;
&lt;li&gt;一些行为同时发生。比如让升降装置、机械手腕、机械夹&lt;strong&gt;同时&lt;/strong&gt;工作来移动到拾取位置，这相比一个接一个地移动更有效率。&lt;/li&gt;
&lt;li&gt;最好能够单独测试某个机械或者某个行为，提高调试的效率。&lt;/li&gt;
&lt;li&gt;有时在上场前的最后一刻，还需要编写新的自动程序来提高运行效率，因此代码的可扩展性十分重要。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在编写机器人行为时，我们应该避免使用非模块化、非结构化的方法，而应使用指令式编程，因为她（是的！指令式编程在我心中就是如女神般的存在！）支持上述所有特性，使编写复杂的机器人行为更为简单方便。&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;指令和子系统&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/1-3a49f64af50103e3d10d52f3029e8a0602fa4b98ea701a1071d1e102bd192f69.png&quot; width=&quot;640&quot; height=&quot;158&quot; alt=&quot;what-is-command-based-programming/1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;使用 WPILib 的指令式编程编写的程序，最终的工程都是由最基本的两部分组成的：&lt;strong&gt;子系统&lt;/strong&gt;和&lt;strong&gt;指令&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;子系统：定义机器人的某个机械可以执行的功能。它继承于 &lt;code&gt;Subsystem&lt;/code&gt; 类。&lt;/p&gt;

&lt;p&gt;指令：通过子系统中支持的功能，结合成一个机器人的行为。它继承于 &lt;code&gt;Command&lt;/code&gt; 类或 &lt;code&gt;CommandGroup&lt;/code&gt; (指令组) 类。指令会被调度或事件发生时执行。比如手柄按钮被按下、SmartDashboard 中的虚拟按钮被按下。&lt;/p&gt;

&lt;h2&gt;指令是如何被执行的&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/2-cf5393e42f96cf64afc6f8e3ec83b591db42da1067f44dafb9d9ee2e4b7dcc58.png&quot; width=&quot;640&quot; height=&quot;199&quot; alt=&quot;what-is-command-based-programming/2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;指令使得我们可以把操作机器人的一整个步骤分割成一个个小的部分。每个指令都有一个 &lt;code&gt;execute()&lt;/code&gt; (执行) 函数和一个 &lt;code&gt;isFinished()&lt;/code&gt; (是否执行结束) 函数。这些函数在收到 Driver Station 的状态更新后执行，周期大约为 20 毫秒。我们可以组合并依次执行指令。&lt;/p&gt;

&lt;h2&gt;并行&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/3-34598754372e36c8913a762547cefd99f33a43c99677146ad09663670e4ca440.png&quot; width=&quot;640&quot; height=&quot;404&quot; alt=&quot;what-is-command-based-programming/3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;有时我们需要几个行为同时执行来实现指定功能。在先前图中的例子里，可能需要在机械手腕转动的同时提升升降装置。我们可以通过&lt;strong&gt;指令组&lt;/strong&gt;来启动数个并行执行的指令，甚至可以通过指令组来启动数个并行执行的指令组。&lt;/p&gt;

&lt;h1&gt;指令被以何种方式执行 —— 指令调度&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/4-adad6a6c340930857fa36ef5705f2490996a36eefe391affcf7ddfcbc44bb66a.png&quot; width=&quot;477&quot; height=&quot;514&quot; alt=&quot;what-is-command-based-programming/4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;机器人程序中主要有三种方式调用指令：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;手动调用，直接调用指令的 &lt;code&gt;start()&lt;/code&gt; 函数。（一般在自动阶段使用）&lt;/li&gt;
&lt;li&gt;自动在事件发生时执行。比如在程序中定义的按钮按下、按住等事件。（事件基本上都在 &lt;code&gt;OI&lt;/code&gt; 类里定义，但会由调度器确定执行时机）&lt;/li&gt;
&lt;li&gt;在上一个指令执行完成时。（子系统的默认指令和指令组中的指令）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当机器人程序从 Driver Station 那里获取到了新的数据后，机器人程序的周期函数会被调用（这些函数都是 &lt;code&gt;Periodic&lt;/code&gt; 结尾的）。在指令式机器人程序中，周期函数干的事情就是让调度器根据触发的事件确认是否需要执行新的指令，或者停止一个正在执行的指令。&lt;/p&gt;

&lt;p&gt;当一个指令将要被执行时，调度器会保证没有其他指令在使用这个指令所需要的子系统。如果一个或多个子系统正在被其他指令使用，并且这些正在执行的指令可以被中断，那么正在执行的指令会被中断，新的指令就会被&lt;strong&gt;加入当前正在执行的指令列表&lt;/strong&gt;。如果有正在执行的指令不能被中断，新的指令就无法执行。&lt;/p&gt;

&lt;h2&gt;指令如何被调用 —— 指令的执行&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/5-d43e2f5f0eb1afa2dc986e4ee083f17f8daa1499fed5d39b3a7ae77fe5494fd9.png&quot; width=&quot;198&quot; height=&quot;358&quot; alt=&quot;what-is-command-based-programming/5.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;调度器维护了一个当前正在执行的指令列表，在一个周期内调用每一个正在执行指令的 &lt;code&gt;execute()&lt;/code&gt; 和 &lt;code&gt;isFinished()&lt;/code&gt; 方法。显而易见，这些操作都可以不需要使用多线程多任务技术就能完成，这显著地降低了程序的复杂程度。每一个指令都有一个 &lt;code&gt;execute()&lt;/code&gt; 函数和一个 &lt;code&gt;isFinished()&lt;/code&gt; 函数。 &lt;code&gt;execute()&lt;/code&gt; 函数执行让机器人一步步接近目标的程序； &lt;code&gt;isFinished()&lt;/code&gt; 函数决定程序是否已经达到指令的目标。这两个函数都是不断地被周期性调用的。&lt;/p&gt;

&lt;h2&gt;指令组&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/2-cf5393e42f96cf64afc6f8e3ec83b591db42da1067f44dafb9d9ee2e4b7dcc58.png&quot; width=&quot;640&quot; height=&quot;199&quot; alt=&quot;what-is-command-based-programming/2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;复杂的指令是由一个个小的指令组合而成的。比如射击飞盘可能由“瞄准飞盘”、“向‘指令式编程’女神敬礼”、“扣动扳机”等一系列指令组成，一个接一个执行。可能这些一个接一个执行的指令中还有需要并行执行的指令。指令组是一个指令，但不需要自己定义 &lt;code&gt;isFinished()&lt;/code&gt; 和 &lt;code&gt;execute()&lt;/code&gt; 方法，因为它帮助我们接管一系列指令的执行。因此我们可以把许多小的指令组合起来，变成一个巨大的复杂的指令组。这种模块化思想是经常在软件工程中使用到的。每一个小指令都可以被单独测试，最后再测试指令组。指令组的相关教程可以在“创建指令组”这一篇教程中找到。&lt;/p&gt;

&lt;p&gt;*（感谢 &lt;a href=&quot;https://github.com/SkyZH&quot;&gt;@SkyZH&lt;/a&gt; &lt;a href=&quot;https://github.com/incrediblink/&quot;&gt;@IncredibLink&lt;/a&gt; 翻译）&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Aug 2016 10:13:22 +0000</pubDate>
        <link>http://frc.hsefz.org/command-based%20programming/programming/2016/08/22/what-is-command-based-programming.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/command-based%20programming/programming/2016/08/22/what-is-command-based-programming.html</guid>
        
        <category>机器人</category>
        
        <category>Java</category>
        
        <category>编程</category>
        
        <category>翻译</category>
        
        
        <category>command-based programming</category>
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>论如何维护 Zodiac 官网</title>
        <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先需要注册一个 &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; 账号。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;访问 &lt;a href=&quot;https://github.com/ZodiacEFZ/website/&quot;&gt;https://github.com/ZodiacEFZ/website/&lt;/a&gt; ，点击 Fork 把这个项目拷贝到自己的账户下。
&lt;strong&gt;（这之后的操作都是在自己的项目里操作的！）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-1-7e7a232fe8665849d169d146fd8194052496d7f91f591919879cca27771b789f.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-1.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在拷贝后的网站 &lt;code&gt;_posts&lt;/code&gt; 文件夹下点击 &lt;code&gt;Create New File&lt;/code&gt; 创建文件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-2-fb05f2821733ecfe8739495522ad298df0d5a98153acb63cbf5b224ea4880042.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-2.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文件名设置为 &lt;code&gt;2016-08-04-first-day-training.markdown&lt;/code&gt; (格式为 &lt;code&gt;日期-英文-名&lt;/code&gt;)。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-3-5c9537bb45badca54a5bca7b1f73c97f42b079449e0a20fa4c62cad4e78ae4e9.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-3.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在开头复制文件头    &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;创客营第一天&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2016-08-03 15:10:09 +0800&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;news&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;新闻 创客营 日常&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;把 &lt;code&gt;date&lt;/code&gt; 改成当前时间，&lt;code&gt;categories&lt;/code&gt; 只能写英文无空格。    &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-4-6626ff3e35766b8db019ef3e49d4095f6ffa9d449af696a7d575e0f3abc190e0.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-4.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;空一行直接开始写文章。Markdown 语法相关请参见 &lt;a href=&quot;http://www.jianshu.com/p/q81RER&quot;&gt;http://www.jianshu.com/p/q81RER&lt;/a&gt;
(如果不习惯使用 GitHub 的编辑器，可以在 &lt;a href=&quot;https://stackedit.io&quot;&gt;StackEdit&lt;/a&gt; 上编辑完成后拷贝过来)。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-5-8b15a9318c6a1aa5979fe3e71adb5150da5aa67e9970052c9a4bd7a7ec995669.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-5.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 &lt;code&gt;Preview&lt;/code&gt; 可以预览当前文章。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-6-ee25183cca627d7e9844ec4d21bc352ac2a43d87a2adda550644a07fde6f5bd1.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-6.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果需要插入图片，请先新建一个在与文章名字相同的目录的文件 &lt;code&gt;_assets/img/first-day-training/dummy.txt&lt;/code&gt;，再把压缩后的图片上传到 &lt;code&gt;_assets/img/first-day-training&lt;/code&gt; 目录下。文件名不要出现中文字符。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-7-11eca0557aaf2f404993508c6f976d22d99556db47c06e3b4aca0e08499b1f36.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-7.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在文章中引入图片，换行空行后直接插入代码：&lt;br&gt;
&lt;code&gt;&amp;#123;&amp;#37; img first-day-training/test-picture.jpg &amp;#37;&amp;#125;&lt;/code&gt;    &lt;/p&gt;

&lt;p&gt;这里 &lt;code&gt;first-day-training/test-picture.jpg&lt;/code&gt; 是图片相对于 img 目录的位置。注意图片无法直接在 GitHub 上预览文章时显示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-8-ed4dc485c31078d6e6b48e1350087c12979da9896a5aa738033cd0b8d24c2950.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-8.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 &lt;code&gt;Commit New File&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-9-6bf7e90cb59d391c3e564c8b44f63472ab26ff5351f2e7e307a2a27be94296d6.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-9.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文章的文字和图片都上传完毕后，点击项目导航栏中的 &lt;code&gt;New Pull Request&lt;/code&gt;，在提交信息中填写这次更改的内容（比如&lt;code&gt;添加了创客营第一天的新闻&lt;/code&gt;），再点击 &lt;code&gt;Create Pull Request&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-10-25839d29306fdc2399ab31eccb121f481d4d764012ba5facaba3a8cb1098c634.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-10.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-11-bf9294be271b98593fddaaba373e7b54551c6bd7eb745dbfde6fbdaf05a17812.png&quot; width=&quot;1412&quot; height=&quot;887&quot; alt=&quot;make-website/website-11.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-12-f0c833591db468ea37dda063e41b1c91b4b50dde6725fdcf1b23588927a87488.png&quot; width=&quot;1412&quot; height=&quot;887&quot; alt=&quot;make-website/website-12.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在这里可以看到审核状况 &lt;a href=&quot;https://github.com/ZodiacEFZ/website/pulls&quot;&gt;https://github.com/ZodiacEFZ/website/pulls&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本人审核后即可自动部署到网站上。部署完毕后在 Slack 的 &lt;code&gt;#business&lt;/code&gt; 中会有通知。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-13-112b65850fc5f004b2040da82b7df04c0bc630408bef23e1ecd0a7b782e74a30.png&quot; width=&quot;1204&quot; height=&quot;649&quot; alt=&quot;make-website/website-13.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;其中 &lt;strong&gt;GitHub&lt;/strong&gt; 出现 &lt;code&gt;1 new commit&lt;/code&gt; 表示审核已经通过，大约三分钟后出现 &lt;strong&gt;Travis&lt;/strong&gt; &lt;code&gt;Build #93 (036ff5c) of ZodiacEFZ/website@master by SkyZH passed in 4 min 39 sec&lt;/code&gt; 表示已经将修改同步到网站上。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 19 Aug 2016 05:02:26 +0000</pubDate>
        <link>http://frc.hsefz.org/team/2016/08/19/make-website.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/team/2016/08/19/make-website.html</guid>
        
        <category>队伍</category>
        
        <category>网站</category>
        
        <category>维护</category>
        
        
        <category>team</category>
        
      </item>
    
      <item>
        <title>友情链接 / Friends</title>
        <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;9046 / 初檬 &lt;a href=&quot;https://truemoe.cn/&quot;&gt;https://truemoe.cn/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;341 / Miss Daisy &lt;a href=&quot;http://www.team341.com/&quot;&gt;http://www.team341.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5515 / Blue Power Robotics (蓝色动力) &lt;a href=&quot;http://www.team5515.com/&quot;&gt;http://www.team5515.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;9048 / META ROBOTICS &lt;a href=&quot;http://www.metarobotics.org&quot;&gt;http://www.metarobotics.org&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1595 / The Dragons &lt;a href=&quot;http://www.1595dragons.org/&quot;&gt;http://www.1595dragons.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4001 / Rams Robotics &lt;a href=&quot;http://www.team4001.com/&quot;&gt;http://www.team4001.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 17 Aug 2016 07:12:06 +0000</pubDate>
        <link>http://frc.hsefz.org/team/2016/08/17/friends.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/team/2016/08/17/friends.html</guid>
        
        <category>队伍</category>
        
        <category>链接</category>
        
        
        <category>team</category>
        
      </item>
    
      <item>
        <title>CommandGroup · 指令组</title>
        <description>&lt;p&gt;&lt;code&gt;ZYZ&lt;/code&gt; 是来自 &lt;code&gt;Zodiac&lt;/code&gt; 的巨神程序猿。作为一名 Xenial 星人，他有一个聪慧的大脑 INN。利用
INN，他可以 &lt;strong&gt;按顺序&lt;/strong&gt; 或者 &lt;strong&gt;同时&lt;/strong&gt; 完成一项或多项任务。&lt;/p&gt;

&lt;p&gt;在进行机器人编程的时候，难免会发现，一个 &lt;code&gt;Command&lt;/code&gt; 只能执行一个动作，或者是同时执行多个动作。
&lt;code&gt;WPILib&lt;/code&gt; 中，提供一种叫 &lt;code&gt;CommandGroup&lt;/code&gt; 的特殊 &lt;code&gt;Command&lt;/code&gt;, 可以用来进行 &lt;code&gt;Command&lt;/code&gt; 的&lt;strong&gt;顺序管理&lt;/strong&gt;。&lt;/p&gt;

&lt;h2&gt;创建 CommandGroup&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-group/create-1-59837c7e26087e3d42f8f06cc0752bef7ec6cd73431821a0e5c5f6caba0e97dd.png&quot; width=&quot;684&quot; height=&quot;497&quot; alt=&quot;command-group/create-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;右击项目 - &lt;code&gt;Add&lt;/code&gt; - &lt;code&gt;CommandGroup&lt;/code&gt; 输入名称即可创建一个指令组。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestCommandGroup&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommandGroup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TestCommandGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 在这里插入你的代码&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在构造函数内插入代码就能描述一个指令组。&lt;/p&gt;

&lt;h2&gt;串联指令与并行指令&lt;/h2&gt;

&lt;p&gt;在 &lt;code&gt;CommandGroup&lt;/code&gt; 中，最常用的两个函数是 &lt;code&gt;addSequential(Command command)&lt;/code&gt; 与
&lt;code&gt;addParallel(Command command)&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;其中, &lt;code&gt;addSequential&lt;/code&gt; 是顺序执行一个指令(串联)，而 &lt;code&gt;addParallel&lt;/code&gt;
则是使该指令和上一指令同时进行(并行)，并在所有并列的指令都执行完成后再执行剩下的指令。&lt;/p&gt;

&lt;p&gt;我们再回到之前的 Command-based Robot 中，探索如何运行 INN 器官。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-based-robot/xenial-2-fc36582b34c71f65658137bd1519040ff923df78f538715a199a21e732e4c77b.png&quot; width=&quot;963&quot; height=&quot;665&quot; alt=&quot;command-based-robot/xenial-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;CommandGroup&lt;/code&gt; 的构造函数里插入你的代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;INNCommandGroup&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommandGroup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;INNCommandGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addParallel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时, &lt;code&gt;Command1&lt;/code&gt; 先执行，接着 &lt;code&gt;Command2&lt;/code&gt; 与 &lt;code&gt;Command3&lt;/code&gt; 同时执行，
最后在两者都执行完成后才开始执行 &lt;code&gt;Command4&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：如果需要达到并联串联同时使用的效果，可以将一部分指令放在一个 CommandGroup 里，再将这个 CommandGroup 加到其他的 CommandGroup 里。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-group/create-2-9aa4bc029440311d2a1a0f04f34afd4f1afeb087305f413fc6ecbd1adc4686ff.png&quot; width=&quot;684&quot; height=&quot;497&quot; alt=&quot;command-group/create-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;比如这里可以将绿框内的 &lt;code&gt;Command&lt;/code&gt; 放在一个 &lt;code&gt;CommandGroup&lt;/code&gt; 里，标号 &lt;code&gt;7&lt;/code&gt;，
然后再创建一个 &lt;code&gt;CommandGroup&lt;/code&gt;：&lt;/p&gt;

&lt;h3&gt;Command7&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;CommandFinal&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addParallel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addParallel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// Command7 是一个 CommandGroup&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;消失的函数&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;initialize()&lt;/code&gt;, &lt;code&gt;execute()&lt;/code&gt;, &lt;code&gt;isFinished()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;interrupted()&lt;/code&gt; 这些本来继承于 &lt;code&gt;Command&lt;/code&gt; 的函数还需要写吗？&lt;/p&gt;

&lt;p&gt;&lt;code&gt;CommandGroup&lt;/code&gt; 继承了 &lt;code&gt;Command&lt;/code&gt; 类，已经帮你写好了这些函数，帮助你管理所有指令。因此你不需要再重载这些函数。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;感谢 Rocka Zhou 供稿&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Aug 2016 15:30:41 +0000</pubDate>
        <link>http://frc.hsefz.org/programming/2016/08/16/command-group.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/programming/2016/08/16/command-group.html</guid>
        
        <category>zyz的编程干货</category>
        
        <category>机器人</category>
        
        <category>Java</category>
        
        <category>编程</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>开源项目 / Open Source Projects</title>
        <description>&lt;div class=&quot;container&quot;&gt;
  &lt;h1 class=&quot;display-4&quot;&gt;开源项目 / Open Source Projects&lt;/h1&gt;
  &lt;h2&gt;Stronghold 2016&lt;/h2&gt;
  &lt;p&gt;We are happy to announce that all of our projects in Stronghold 2016 are open-sourced.&lt;/p&gt;
  &lt;div class=&quot;card-columns m-t-3&quot;&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;BreezeRobot&lt;/h4&gt;
          &lt;p&gt;Robot Program for Stronghold 2016
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/BreezeRobot&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Vision MJPEG Proxy&lt;/h4&gt;
          &lt;p&gt;Proxy will set up a web server to serve WebDashboard static files and proxy requests to vision camera server so as to make it possible for multiple clients to gain access to vision camera at the same time.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/stronghold-vision-mjpeg-proxy&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Vision OpenCV&lt;/h4&gt;
          &lt;p&gt;Vision process with OpenCV by Zodiac.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/stronghold-vision-opencv&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Vision WebDashboard&lt;/h4&gt;
          &lt;p&gt;Vision dashboard for Zodiac.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/stronghold-vision-webdashboard&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Video Capture&lt;/h4&gt;
          &lt;p&gt;Capture video from an mjpg stream and extract them into image sequence.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/stronghold-video-capture&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Website&lt;/h4&gt;
          &lt;p&gt;Zodiac Website source code.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/website&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Vision Script&lt;/h4&gt;
          &lt;p&gt;Process Management with PM2 on Raspberry Pi to start vision process.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/stronghold-vision-script&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 13 Aug 2016 13:42:45 +0000</pubDate>
        <link>http://frc.hsefz.org/team/2016/08/13/open-source.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/team/2016/08/13/open-source.html</guid>
        
        <category>队伍</category>
        
        <category>开源</category>
        
        
        <category>team</category>
        
      </item>
    
      <item>
        <title>队员介绍 / Team Member</title>
        <description>&lt;div class=&quot;container m-t-3&quot;&gt;
  &lt;h1 class=&quot;display-4&quot;&gt;队员介绍 / Team Member&lt;/h1&gt;
  &lt;div class=&quot;card-columns m-t-3&quot;&gt;
    
      
      &lt;div class=&quot;card card-outline-success text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;Albert Chen (陈向东)&lt;/h4&gt;
            &lt;p&gt;From Engineer Technology Department of No.2 High school of East China Normal University. A Master Degree in Educational Technology of East China Normal University.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Mentor&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card card-outline-info text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;Clark (陈谦路)&lt;/h4&gt;
            &lt;p&gt;运动达人，昆虫控，喜欢捣鼓电子和机械。不过感觉只要是团队合作都很喜欢。&lt;br&gt; I have a wide variety of hobbies which allows me to negotiate with different groups of the team quite easily. Also my double personality, serious when working and silly when playing, helps me get along with my teammates well.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Captain&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card card-outline-info text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;GuoZL (郭子梁)&lt;/h4&gt;
            &lt;p&gt;我渣渣，涉猎较广泛。爱膜蛤 +1，兼任小学生手工副队长助理。&lt;br&gt; I have a broad mind, to an extend. In addition to help our group leader to do some team work, I also do a lot of &lt;em&gt;interesting&lt;/em&gt; handcrafts (for instance, the bumper and our wooden moat).
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Vice Captain&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card card-outline-warning text-xs-center member-info&quot;&gt;
        
        
        
        
          &lt;img class=&quot;card-img-top member-info-avatar&quot; src=&quot;https://www.gravatar.com/avatar/be0abc52003c2eb5006b5923f3486a61.jpg?s=512&quot;&gt;
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;SkyZH (迟遲)&lt;/h4&gt;
            &lt;p&gt;不会写程序，补番大魔王，爱膜蛤。&lt;br&gt; Experienced in software engineering. Maintain several open source projects. Focus on vision process.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Leader of Programming&lt;br&gt;Web Engineer&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card  text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;Xinjia (新家正太)&lt;/h4&gt;
            &lt;p&gt;喜欢工科，Inventor 玩得还不错，课余喜欢踢球和赛车游戏。&lt;br&gt; Good at robot controlling and CAD. Help the team figure out the way of building our robot.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Member of Electronical&lt;br&gt;Driver&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card card-outline-info text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;闵天淏 16 男&lt;/h4&gt;
            &lt;p&gt;MDZZ。&lt;br&gt; Phylosophy。&lt;br&gt; 队里负责锯木头以及布艺，简单来说就是技工。 单机游戏，烧耳机。 羽毛球，过度热爱公路车导致牙齿疼痛。 在交响乐团吹大管。
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Vice Captain&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card card-outline-warning text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;David Wang (汪达玮)&lt;/h4&gt;
            &lt;p&gt;Having no experienced skill, except strong ability to arrange wires, but learning fast. Preferring to solving problems efficiently. Believing that safety comes first, friendship comes second, competition comes the third.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Leader of Electronical&lt;br&gt;Safety Captain&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card  text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;杨致远&lt;/h4&gt;
            &lt;p&gt;机械工，酷爱足球和机器人，善于切割板材，制作零件。喜欢工程。
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Member of Electronical&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card  text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;Rocka Zhou (周亦哲)&lt;/h4&gt;
            &lt;p&gt;新人一枚，喜爱工程，乐于编程，MC忠粉。 Focus on robotics logic, and some other programming issues. Helpful in mechanic designing. Know how to use CAD.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Member of Programming&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    

  &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 10 Aug 2016 13:22:19 +0000</pubDate>
        <link>http://frc.hsefz.org/team/2016/08/10/team-member.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/team/2016/08/10/team-member.html</guid>
        
        <category>队伍</category>
        
        <category>介绍</category>
        
        
        <category>team</category>
        
      </item>
    
      <item>
        <title>创客营第零天</title>
        <description>&lt;p&gt;今天各队员来到了奉贤中等职业学校，在放置好了机器人和所有零件后，我们将宿舍的床铺擦干净，并铺好了各自的床上用品。这里的住宿条件讲真不太好 orz = = 上铺还需要下铺的同学“放下来”（要不然爬梯子床会倒）……&lt;/p&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;col-md-6&quot;&gt;
    &lt;img src=&quot;http://frc.hsefz.org/assets/crc-training-0/IMG_2668-eef12f48a8264cc14e36a5339a503982e3995828e5bf584581670fbf42495ad5.JPG&quot; width=&quot;667&quot; height=&quot;1000&quot; alt=&quot;crc-training-0/IMG_2668.JPG&quot;&gt;
  &lt;/div&gt;
  &lt;div class=&quot;col-md-6&quot;&gt;
    &lt;img src=&quot;http://frc.hsefz.org/assets/crc-training-0/IMG_2657-6f2cfa848cb5323760e41f1fc150c68500c8ec4db51149733cd7fd6a1cef5af7.JPG&quot; class=&quot;m-b-1&quot; width=&quot;1000&quot; height=&quot;667&quot; alt=&quot;crc-training-0/IMG_2657.JPG&quot;&gt;

    &lt;img src=&quot;http://frc.hsefz.org/assets/crc-training-0/IMG_2672-3b3ddb8786f84fb1e68ae28b15a6c93715bf2176d252df8d16c08cee781e6d85.JPG&quot; width=&quot;1000&quot; height=&quot;667&quot; alt=&quot;crc-training-0/IMG_2672.JPG&quot;&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;今天晚上 6:30 左右我们开始参加创客营的入营培训活动，主要是强调了安全的事宜，特别是针对了安全老师巡查各教室的时候发现的安全隐患，比如护目镜的佩戴、手套的使用以及诸多应急情况的处理方式。一定程度上帮助我们发现了自身在人身保护方面的不足。毕竟，安全第一，一切活动都应该以安全作为第一要求、准则。&lt;/p&gt;

&lt;p&gt;之后，主要是针对创客营时间安排、作息时间，以及 CRC 比赛的一些事宜（比如规则、一些活动）的通知。总的来说，能够对我们再创客营期间的生活、制作，以及 CRC 比赛有很大的帮助。&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Aug 2016 07:10:09 +0000</pubDate>
        <link>http://frc.hsefz.org/news/2016/08/03/first-day-training.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/news/2016/08/03/first-day-training.html</guid>
        
        <category>新闻</category>
        
        <category>创客营</category>
        
        <category>日常</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>和 Xenial 情感交流</title>
        <description>&lt;h2&gt;那些年，那个扫地机器人&lt;/h2&gt;

&lt;p&gt;SkyZH 研发了扫地机器人几个月后，终于意识到，只让扫地机器人自主扫地是远远不够的。
SkyZH 决定开发一套通讯系统，使用 Xenialware 上的 APP 控制扫地机器人打扫的房间。&lt;/p&gt;

&lt;p&gt;为了连接到机器人，SkyZH 引入了一套协议 &lt;code&gt;mDNS&lt;/code&gt;。
&lt;code&gt;mDNS&lt;/code&gt; 帮助计算机快速连接到 RoboRIO 机器人。
没有 &lt;code&gt;mDNS&lt;/code&gt; 协议，SkyZH 就必须在管理系统中获取机器人的 IP 地址，
然后在 APP 中手动输入。引入了这个协议后，SkyZH 就可以直接通过网址访问机器人了！
在烧写机器人固件时，SkyZH 确定了它的地址为 &lt;code&gt;roborio-2333-frc.local&lt;/code&gt;。
于是他就可以直接通过 &lt;code&gt;roborio-2333-frc.local&lt;/code&gt; 这个地址解析出机器人的局域网 IP
&lt;code&gt;10.23.33.xx&lt;/code&gt;，接着连接上去了。&lt;/p&gt;

&lt;h2&gt;Networktables&lt;/h2&gt;

&lt;p&gt;SkyZH 引入了 &lt;code&gt;Networktables&lt;/code&gt; 协议进行机器人数据的储存。
SkyZH 可以在 &lt;code&gt;Networktables&lt;/code&gt; 中创建表格，并在表格中储存键值对。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Networktables&lt;/code&gt; 由服务器和客户端组成。服务器一般运行在 RoboRIO 控制器上，
而客户端可以运行在任何地方。比如烧写在 RoboRIO 上的程序可以通过 &lt;code&gt;Networktables&lt;/code&gt;
获取一个值，电脑上的 &lt;code&gt;SmartDashboard&lt;/code&gt; 可以通过 &lt;code&gt;Networktables&lt;/code&gt; 获取机器人的传感器数据，
同时你也可以通过 Python 编写一个 &lt;code&gt;Networktables&lt;/code&gt; 程序。&lt;/p&gt;

&lt;h3&gt;打开测试的 NetworkTable&lt;/h3&gt;

&lt;p&gt;安装 WPIlib 插件之后，你就可以在 &lt;code&gt;&amp;lt;用户目录&amp;gt;/wpilib/tools&lt;/code&gt; 中找到应用程序。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/networking-roborio/smartdashboard-1-1c96b6a098f1554aa9203ac3c9f211e353fdc531bbbe0013c955ce39ae3b5eba.png&quot; width=&quot;1196&quot; height=&quot;839&quot; alt=&quot;networking-roborio/smartdashboard-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OutlineViewer&lt;/code&gt; 是一个 &lt;code&gt;Networktables&lt;/code&gt; 的监视工具。你可以在这个应用里看到所有的 &lt;code&gt;Networktables&lt;/code&gt; 数据。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/networking-roborio/nt-1-fc8c72f3421c6a17ab4eecc5af5ecf73c38d413e7991c40947f8e3e7708513e8.png&quot; width=&quot;345&quot; height=&quot;176&quot; alt=&quot;networking-roborio/nt-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;地址填写 &lt;code&gt;localhost&lt;/code&gt;，当然在调试机器人时要填写 &lt;code&gt;roborio-xxxx-frc.local&lt;/code&gt;。
本地调试则点击 &lt;code&gt;Start Server&lt;/code&gt; 运行服务器。调试机器人选择 &lt;code&gt;Start Client&lt;/code&gt; 运行客户端。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/networking-roborio/nt-2-c688272d90f10bbc4bce0a0d91a9902f7767c6391a9826ee717c2beadb62a670.png&quot; width=&quot;584&quot; height=&quot;392&quot; alt=&quot;networking-roborio/nt-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在这个界面中就可以监视所有数值。&lt;/p&gt;

&lt;h3&gt;在机器人控制器上存储数据&lt;/h3&gt;

&lt;p&gt;首先要从 Networktables 中获取一张表格。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;NetworkTable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NetworkTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接着就可以向表格中存储各种数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testInt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;233&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testString&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello, World!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;putString&lt;/code&gt;/&lt;code&gt;putNumber&lt;/code&gt; 在设置的键存在时，会覆盖之前的数据。但是，
如果 &lt;code&gt;test&lt;/code&gt; 原先设置成数字 233，而后又 &lt;code&gt;putString(&amp;quot;test&amp;quot;, &amp;quot;Hello!&amp;quot;)&lt;/code&gt; 就会报错。
键的类型是不能改变的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/networking-roborio/nt-3-6251d18fcda6b7ed911fa94aebcc7477ce61f0ae6ad91c3a8a0b2e67885a5518.png&quot; width=&quot;584&quot; height=&quot;392&quot; alt=&quot;networking-roborio/nt-3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;获取数据也十分简单。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testInt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testString&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default String&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;函数的参数，第一个是要获取的键，第二个是如果该键不存在返回的默认值。&lt;/p&gt;

&lt;h3&gt;远程操控&lt;/h3&gt;

&lt;p&gt;视觉处理的数据经过控制器传输后，需要在电脑上处理。因此需要在电脑上远程连接 Networktables。&lt;/p&gt;

&lt;p&gt;在使用 &lt;code&gt;getTable&lt;/code&gt; 前调用初始化函数即可。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;NetworkTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTeam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9036&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;订阅事件&lt;/h3&gt;

&lt;p&gt;通过 Networktables 的事件订阅机制，每当有值被修改时，都可以调用用户指定的函数。
首先要定义一个回调接口，并在接口中编写回调函数。&lt;/p&gt;

&lt;p&gt;定义类成员变量 &lt;code&gt;tableListener&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ITableListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tableListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ITableListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;valueChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ITable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isNew&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testInt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在获取到 &lt;code&gt;Table&lt;/code&gt; 对象后，注册事件处理器。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addTableListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;事务&lt;/h3&gt;

&lt;p&gt;有一天 SkyZH 给扫地机器人编写了视觉处理确定打扫目标程序，程序返回了三个键值对的结果：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;(targetAngle, 180.0)
(tragetPosition, 20)
(tragetSpeed, 10)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;要进行存储，必然要经过以下几个步骤：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;putNumber(&quot;targetAngle&quot;, 180.0);
...
putNumber(&quot;tragetPosition&quot;, 20);
...
putNumber(&quot;tragetSpeed&quot;, 10);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;机器人要不断读取这些数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;getNumber(&quot;targetAngle&quot;, 0);
...
getNumber(&quot;tragetPosition&quot;, 0);
...
getNumber(&quot;tragetSpeed&quot;, 0);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那么问题来了。假设储存程序执行了两次，而这一期间机器人又读取了数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;事件流
1     targetAngle = 180
2     targetPosition = 20
3     targetSpeed = 10
4     get targetAngle           (=180)
5     get tragetPosition        (=20)
6     get targetSpeed           (=10)
7     targetAngle = 170
8     targetPosition = 25
9     targetSpeed = 13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一切正常。&lt;/p&gt;

&lt;p&gt;但如果三个数据不是同时写入或同时读取，或者读取指令因为网络原因没有同时到达，可能造成这种队列：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;事件流
1     targetAngle = 180
2     targetPosition = 20
3     targetSpeed = 10
4     get targetAngle           (=180)
5     targetAngle = 170
6     targetPosition = 25
7     get tragetPosition        (=25)
8     get targetSpeed           (=10)
9     targetSpeed = 13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样获取到的组合就是 &lt;code&gt;{ targetSpeed: 10, targetPosition: 25, targetAngle: 180 }&lt;/code&gt;，不是任何一次设置的值。&lt;/p&gt;

&lt;p&gt;解决方法是将这些指令一起执行。中间不插入任何代码。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;......
putNumber(&quot;targetAngle&quot;, 180.0);
putNumber(&quot;tragetPosition&quot;, 20);
putNumber(&quot;tragetSpeed&quot;, 10);
......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;......
getNumber(&quot;targetAngle&quot;, 0);
getNumber(&quot;tragetPosition&quot;, 0);
getNumber(&quot;tragetSpeed&quot;, 0);
......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者再使用一个临时的键值对 &lt;code&gt;isTransferred&lt;/code&gt;，当数据全部设置完毕后设置为 &lt;code&gt;false&lt;/code&gt;，仅在此时才能获取数据。&lt;/p&gt;

&lt;h3&gt;(拓展) 使用 Python 操作 Networktables&lt;/h3&gt;

&lt;p&gt;我们使用这个开源项目操作 &lt;code&gt;Networktables&lt;/code&gt;。&lt;a href=&quot;https://github.com/robotpy/pynetworktables&quot;&gt;pynetworktables&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 安装 Python3&lt;/li&gt;
&lt;li&gt; 将 Python 添加到环境变量中&lt;/li&gt;
&lt;li&gt; 在命令提示符中运行 &lt;code&gt;pip install pynetworktables&lt;/code&gt;。如果速度很慢请使用国内 pip 镜像。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编写 Python 程序。    &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;networktables&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NetworkTable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dashboard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NetworkTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SmartDashboard'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dashboard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;putNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保存为 &lt;code&gt;test.py&lt;/code&gt;，在命令提示符中切换到当前目录，执行 &lt;code&gt;python test.py&lt;/code&gt;。最后一个 &lt;code&gt;while&lt;/code&gt; 循环保证数据录入后再退出程序。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;SmartDashboard&lt;/h2&gt;

&lt;p&gt;除了使用 &lt;code&gt;Networktables&lt;/code&gt; 储存数据以外，&lt;code&gt;SmartDashboard&lt;/code&gt; 利用 &lt;code&gt;Networktables&lt;/code&gt;，
通过配置文件，可以方便地将储存在 &lt;code&gt;Networktables&lt;/code&gt; 数据展示在屏幕上。
&lt;code&gt;SmartDashboard&lt;/code&gt; 是机器人与计算机通讯的桥梁。&lt;/p&gt;

&lt;h3&gt;打开 SmartDashboard&lt;/h3&gt;

&lt;p&gt;安装 WPIlib 插件 之后，你就可以在 &lt;code&gt;&amp;lt;用户目录&amp;gt;/wpilib/tools&lt;/code&gt; 中找到应用程序。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/networking-roborio/smartdashboard-1-1c96b6a098f1554aa9203ac3c9f211e353fdc531bbbe0013c955ce39ae3b5eba.png&quot; width=&quot;1196&quot; height=&quot;839&quot; alt=&quot;networking-roborio/smartdashboard-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OutlineViewer&lt;/code&gt; 是一个 &lt;code&gt;Networktables&lt;/code&gt; 的监视工具。你可以在这个应用里看到所有的 &lt;code&gt;Networktables&lt;/code&gt; 数据。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SmartDashboard&lt;/code&gt; 是稳定的 &lt;code&gt;SmartDashboard&lt;/code&gt; 版本。推荐在比赛时使用。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sfx&lt;/code&gt; 是一个美观大气但充满 BUG 的 &lt;code&gt;SmartDashboard&lt;/code&gt; 程序。在调试时可以用它进行数据分析。&lt;/p&gt;

&lt;h3&gt;使用 SmartDashboard 显示调试数据&lt;/h3&gt;

&lt;p&gt;SmartDashboard 是一个静态类，可以使用其中的静态函数向 SmartDashboard 发送数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;n&quot;&gt;SmartDashboard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TestData&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23333&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在指令执行过程中不断调用发送数据的指令，数据就会不断刷新。在 &lt;code&gt;SmartDashboard&lt;/code&gt;
上将该数据设置成折线图格式，就可以显示出一段时间内的该数据点的所有数值。&lt;/p&gt;

&lt;h3&gt;为什么有 SmartDashboard 还要 Networktables?&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;SmartDashboard&lt;/code&gt; 是直接展现给操作员的面板，并且可以可视化展现调试数据。&lt;/p&gt;

&lt;p&gt;而视觉处理、图像处理等的临时数据必须要存储在 &lt;code&gt;Networktables&lt;/code&gt; 才能进行进一步展现和处理。
另外 &lt;code&gt;Networktables&lt;/code&gt; 提供了事件订阅功能，可以在其中的键值对发生更改时接收到通知。&lt;/p&gt;

&lt;h2&gt;练习&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; 阅读 &lt;code&gt;SmartDashboard&lt;/code&gt; 教程，学习如何查看现在运行的所有指令、现在 &lt;code&gt;DriveSubsystem&lt;/code&gt; 子系统执行的指令，
以及如何手动运行一个指令。
(&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/26401/l/255422-displaying-the-status-of-commands-and-subsystems&quot;&gt;教程&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt; 阅读 &lt;code&gt;SmartDashboard&lt;/code&gt; 教程，学习如何通过控制板选择自动阶段执行的指令。
(关键: 添加 &lt;code&gt;SendableChooser&lt;/code&gt; 到控制板, &lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/26401&quot;&gt;教程&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt; 添加一个 &lt;code&gt;DebugSubsystem&lt;/code&gt; 以及 &lt;code&gt;DebugCommand&lt;/code&gt;，实现在机器人程序运行期间，不断向 &lt;code&gt;SmartDashboard&lt;/code&gt; 写入一个随机数值。
(提示: 在 &lt;code&gt;DebugCommand&lt;/code&gt; 的 &lt;code&gt;execute&lt;/code&gt; 函数中进行数据存放)&lt;/li&gt;
&lt;li&gt; 通过 &lt;code&gt;Networktables&lt;/code&gt; 读取 &lt;code&gt;Test&lt;/code&gt; 表格中的三个数据 &lt;code&gt;speedMax&lt;/code&gt;, &lt;code&gt;speedDelta&lt;/code&gt; 和 &lt;code&gt;speedMin&lt;/code&gt;。注意使用事务。&lt;/li&gt;
&lt;li&gt; 在 DriverStation 的设置中将默认的调试面板改为 &lt;code&gt;SmartDashboard&lt;/code&gt; (调成 Java 模式)。&lt;/li&gt;
&lt;li&gt; 在 &lt;code&gt;Networktables&lt;/code&gt; 中添加 &lt;code&gt;SubTable&lt;/code&gt; 并存储数据 &lt;a href=&quot;http://first.wpi.edu/FRC/roborio/release/docs/java/edu/wpi/first/wpilibj/networktables/NetworkTable.html&quot;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;请善用官方教程和 WPILib 文档：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/13809&quot;&gt;FRC Java Programming 在线版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/26401&quot;&gt;SmartDashboard 教程 在线版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://first.wpi.edu/FRC/roborio/release/docs/java/&quot;&gt;WPILib API Reference 在线版&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Jul 2016 05:29:02 +0000</pubDate>
        <link>http://frc.hsefz.org/programming/2016/07/24/networking-with-roborio.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/programming/2016/07/24/networking-with-roborio.html</guid>
        
        <category>zc的编程干货</category>
        
        <category>机器人</category>
        
        <category>Java</category>
        
        <category>编程</category>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
