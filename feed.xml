<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Team 9036 | Zodiac</title>
    <description>Team 9036 Zodiac is an FRC Team set up in May, 2016.</description>
    <link>http://frc.hsefz.org/</link>
    <atom:link href="http://frc.hsefz.org/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 22 Aug 2016 12:25:26 +0000</pubDate>
    <lastBuildDate>Mon, 22 Aug 2016 12:25:26 +0000</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>什么是指令式编程</title>
        <description>&lt;blockquote class=&quot;blockquote&quot;&gt;&lt;p&gt;源文：&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/13809/l/599732-what-is-command-based-programming&quot;&gt;What is Command based programming&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;WPILib 支持一种叫“指令式编程”的编写机器人程序的方法。指令式编程是一种可以帮助我们更好地管理机器人工程代码的设计模式。机器人程序和一般的视窗程序不同的地方有：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;行为按次序执行。比如射出飞盘、提升升降装置、在目标地点放置一个管子等等由许多小动作组合而成的&lt;strong&gt;一系列&lt;/strong&gt;动作。&lt;/li&gt;
&lt;li&gt;一些行为同时发生。比如升降装置、机械手腕、机械夹&lt;strong&gt;同时&lt;/strong&gt;工作移动到拾取位置，而不是一个接一个地移动来提高效率。&lt;/li&gt;
&lt;li&gt;最好是能够单独测试某一个机械或者某一个行为，提高调试的效率。&lt;/li&gt;
&lt;li&gt;有时在比赛的最后一分钟，机器人可能还需要编写（不在自动阶段执行的）自动程序来提高运行效率，因此具有高度可扩展性的代码十分重要。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;指令式编程支持以上所有的特性，利用它编写复杂的机器人行为更为简单方便，我们应该避免使用非模块化、非结构化的方法编写这些行为。&lt;/p&gt;

&lt;h2&gt;指令和子系统&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/1-3a49f64af50103e3d10d52f3029e8a0602fa4b98ea701a1071d1e102bd192f69.png&quot; width=&quot;640&quot; height=&quot;158&quot; alt=&quot;what-is-command-based-programming/1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;使用 WPILib 的指令式编程编写的程序，最终的工程都是由最基本的两部分组成的：&lt;strong&gt;子系统&lt;/strong&gt;和&lt;strong&gt;指令&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;子系统：定义机器人的某个机械可以执行的功能。它继承于 &lt;code&gt;Subsystem&lt;/code&gt; 类。&lt;/p&gt;

&lt;p&gt;指令：通过子系统中支持的功能，结合成一个机器人的行为。它继承于 &lt;code&gt;Command&lt;/code&gt; 类或 &lt;code&gt;CommandGroup&lt;/code&gt; (指令组) 类。指令会被调度执行，或者在事件发生时执行。比如手柄按钮被按下、SmartDashboard 中的虚拟按钮被按下。&lt;/p&gt;

&lt;h2&gt;指令如何编写&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/2-cf5393e42f96cf64afc6f8e3ec83b591db42da1067f44dafb9d9ee2e4b7dcc58.png&quot; width=&quot;640&quot; height=&quot;199&quot; alt=&quot;what-is-command-based-programming/2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;指令使得我们可以把操作机器人的一整个步骤分割成一个个小的部分。每个指令都有一个 &lt;code&gt;execute()&lt;/code&gt; (执行中) 函数和一个 &lt;code&gt;isFinished()&lt;/code&gt; (是否执行结束) 函数。这些函数在收到 Driver Station 的状态更新后执行，周期为大约 20 毫秒。指令可以被组合，然后一个接一个依次执行。&lt;/p&gt;

&lt;h2&gt;并行&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/3-34598754372e36c8913a762547cefd99f33a43c99677146ad09663670e4ca440.png&quot; width=&quot;640&quot; height=&quot;404&quot; alt=&quot;what-is-command-based-programming/3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;有时我们需要几个行为并行执行的功能。之前的那个例子里，可能需要在机械手腕转动的同时提升升降装置。一个&lt;strong&gt;指令组&lt;/strong&gt;可以启动一个并行执行的指令，也可以启动一个并行执行的指令组。&lt;/p&gt;

&lt;h1&gt;指令如何被调用 —— 指令调度&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/4-adad6a6c340930857fa36ef5705f2490996a36eefe391affcf7ddfcbc44bb66a.png&quot; width=&quot;477&quot; height=&quot;514&quot; alt=&quot;what-is-command-based-programming/4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;机器人程序中主要有三种方式调用指令：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;手动调用，直接调用指令的 &lt;code&gt;start()&lt;/code&gt; 函数。（一般在自动阶段使用）&lt;/li&gt;
&lt;li&gt;自动在事件发生时执行。比如在程序中定义的按钮按下、按住等事件。（事件基本上都在 &lt;code&gt;OI&lt;/code&gt; 类里定义，但会由调度器确定执行时机）&lt;/li&gt;
&lt;li&gt;在上一个指令执行完成时。（子系统的默认指令和指令组中的指令）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当机器人程序从 Driver Station 那里获取到了新的数据后，机器人程序的 &lt;code&gt;periodic&lt;/code&gt; 这些周期函数会被调用。在指令式机器人程序中，周期函数干的事情就是让调度器根据触发的事件确认是否需要执行新的指令或者停止一个正在执行的指令。&lt;/p&gt;

&lt;p&gt;当一个指令将要被执行时，调度器会保证没有其他指令在使用这个指令所需要的子系统。如果一个或多个子系统正在被其他指令使用，并且这些正在执行的指令可以被中断，那么正在执行的指令会被中断，新的指令就会被&lt;strong&gt;加入当前正在执行的指令列表&lt;/strong&gt;。如果有正在执行的指令不能被中断，新的指令就无法执行。&lt;/p&gt;

&lt;h2&gt;指令如何被调用 —— 指令的执行&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/5-d43e2f5f0eb1afa2dc986e4ee083f17f8daa1499fed5d39b3a7ae77fe5494fd9.png&quot; width=&quot;198&quot; height=&quot;358&quot; alt=&quot;what-is-command-based-programming/5.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;调度器维护了一个当前正在执行的指令列表，在一个周期中调用每一个正在执行指令的 &lt;code&gt;execute()&lt;/code&gt; 和 &lt;code&gt;isFinished()&lt;/code&gt; 方法。显而易见，这些操作都可以不需要使用多线程多任务技术就能完成，这显著地降低了程序的复杂程度。每一个指令都有一个 &lt;code&gt;execute()&lt;/code&gt; 函数，执行让机器人一步步接近目标的程序；还有一个 &lt;code&gt;isFinished()&lt;/code&gt; 函数，决定程序是否已经达到指令的目标。这两个函数都是不断地被周期性调用的。&lt;/p&gt;

&lt;h2&gt;指令组&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/what-is-command-based-programming/2-cf5393e42f96cf64afc6f8e3ec83b591db42da1067f44dafb9d9ee2e4b7dcc58.png&quot; width=&quot;640&quot; height=&quot;199&quot; alt=&quot;what-is-command-based-programming/2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;复杂的指令是由一个个小的指令组合而成的。比如射击飞盘可能由一系列指令组成，一个接一个执行。可能这些一个接一个执行的指令中还有需要并行执行的指令。指令组是一个指令，但不需要自己定义 &lt;code&gt;isFinished()&lt;/code&gt; 和 &lt;code&gt;execute()&lt;/code&gt; 方法，因为它帮助我们接管一系列指令的执行。因此我们可以把许多小的指令组合起来，变成一个巨大的复杂的指令组。这种模块化思想是经常在软件工程中使用到的。每一个小指令都可以被单独测试，最后再测试指令组。指令组的相关教程可以在“创建指令组”这一篇教程中找到。&lt;/p&gt;
</description>
        <pubDate>Mon, 22 Aug 2016 10:13:22 +0000</pubDate>
        <link>http://frc.hsefz.org/command-based%20programming/programming/2016/08/22/what-is-command-based-programming.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/command-based%20programming/programming/2016/08/22/what-is-command-based-programming.html</guid>
        
        <category>机器人</category>
        
        <category>Java</category>
        
        <category>编程</category>
        
        <category>翻译</category>
        
        
        <category>command-based programming</category>
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>论如何维护 Zodiac 官网</title>
        <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先需要注册一个 &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; 账号。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;访问 &lt;a href=&quot;https://github.com/ZodiacEFZ/website/&quot;&gt;https://github.com/ZodiacEFZ/website/&lt;/a&gt; ，点击 Fork 把这个项目拷贝到自己的账户下。
&lt;strong&gt;（这之后的操作都是在自己的项目里操作的！）&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-1-7e7a232fe8665849d169d146fd8194052496d7f91f591919879cca27771b789f.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-1.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在拷贝后的网站 &lt;code&gt;_posts&lt;/code&gt; 文件夹下点击 &lt;code&gt;Create New File&lt;/code&gt; 创建文件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-2-fb05f2821733ecfe8739495522ad298df0d5a98153acb63cbf5b224ea4880042.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-2.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文件名设置为 &lt;code&gt;2016-08-04-first-day-training.markdown&lt;/code&gt; (格式为 &lt;code&gt;日期-英文-名&lt;/code&gt;)。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-3-5c9537bb45badca54a5bca7b1f73c97f42b079449e0a20fa4c62cad4e78ae4e9.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-3.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在开头复制文件头    &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;创客营第一天&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2016-08-03 15:10:09 +0800&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;news&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;新闻 创客营 日常&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;把 &lt;code&gt;date&lt;/code&gt; 改成当前时间，&lt;code&gt;categories&lt;/code&gt; 只能写英文无空格。    &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-4-6626ff3e35766b8db019ef3e49d4095f6ffa9d449af696a7d575e0f3abc190e0.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-4.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;空一行直接开始写文章。Markdown 语法相关请参见 &lt;a href=&quot;http://www.jianshu.com/p/q81RER&quot;&gt;http://www.jianshu.com/p/q81RER&lt;/a&gt;
(如果不习惯使用 GitHub 的编辑器，可以在 &lt;a href=&quot;https://stackedit.io&quot;&gt;StackEdit&lt;/a&gt; 上编辑完成后拷贝过来)。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-5-8b15a9318c6a1aa5979fe3e71adb5150da5aa67e9970052c9a4bd7a7ec995669.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-5.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 &lt;code&gt;Preview&lt;/code&gt; 可以预览当前文章。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-6-ee25183cca627d7e9844ec4d21bc352ac2a43d87a2adda550644a07fde6f5bd1.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-6.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果需要插入图片，请先新建一个在与文章名字相同的目录的文件 &lt;code&gt;_assets/img/first-day-training/dummy.txt&lt;/code&gt;，再把压缩后的图片上传到 &lt;code&gt;_assets/img/first-day-training&lt;/code&gt; 目录下。文件名不要出现中文字符。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-7-11eca0557aaf2f404993508c6f976d22d99556db47c06e3b4aca0e08499b1f36.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-7.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在文章中引入图片，换行空行后直接插入代码：&lt;br&gt;
&lt;code&gt;&amp;#123;&amp;#37; img first-day-training/test-picture.jpg &amp;#37;&amp;#125;&lt;/code&gt;    &lt;/p&gt;

&lt;p&gt;这里 &lt;code&gt;first-day-training/test-picture.jpg&lt;/code&gt; 是图片相对于 img 目录的位置。注意图片无法直接在 GitHub 上预览文章时显示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-8-ed4dc485c31078d6e6b48e1350087c12979da9896a5aa738033cd0b8d24c2950.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-8.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 &lt;code&gt;Commit New File&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-9-6bf7e90cb59d391c3e564c8b44f63472ab26ff5351f2e7e307a2a27be94296d6.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-9.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文章的文字和图片都上传完毕后，点击项目导航栏中的 &lt;code&gt;New Pull Request&lt;/code&gt;，在提交信息中填写这次更改的内容（比如&lt;code&gt;添加了创客营第一天的新闻&lt;/code&gt;），再点击 &lt;code&gt;Create Pull Request&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-10-25839d29306fdc2399ab31eccb121f481d4d764012ba5facaba3a8cb1098c634.png&quot; width=&quot;1412&quot; height=&quot;636&quot; alt=&quot;make-website/website-10.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-11-bf9294be271b98593fddaaba373e7b54551c6bd7eb745dbfde6fbdaf05a17812.png&quot; width=&quot;1412&quot; height=&quot;887&quot; alt=&quot;make-website/website-11.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-12-f0c833591db468ea37dda063e41b1c91b4b50dde6725fdcf1b23588927a87488.png&quot; width=&quot;1412&quot; height=&quot;887&quot; alt=&quot;make-website/website-12.png&quot;&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在这里可以看到审核状况 &lt;a href=&quot;https://github.com/ZodiacEFZ/website/pulls&quot;&gt;https://github.com/ZodiacEFZ/website/pulls&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本人审核后即可自动部署到网站上。部署完毕后在 Slack 的 &lt;code&gt;#business&lt;/code&gt; 中会有通知。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/make-website/website-13-112b65850fc5f004b2040da82b7df04c0bc630408bef23e1ecd0a7b782e74a30.png&quot; width=&quot;1204&quot; height=&quot;649&quot; alt=&quot;make-website/website-13.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;其中 &lt;strong&gt;GitHub&lt;/strong&gt; 出现 &lt;code&gt;1 new commit&lt;/code&gt; 表示审核已经通过，大约三分钟后出现 &lt;strong&gt;Travis&lt;/strong&gt; &lt;code&gt;Build #93 (036ff5c) of ZodiacEFZ/website@master by SkyZH passed in 4 min 39 sec&lt;/code&gt; 表示已经将修改同步到网站上。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 19 Aug 2016 05:02:26 +0000</pubDate>
        <link>http://frc.hsefz.org/team/2016/08/19/make-website.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/team/2016/08/19/make-website.html</guid>
        
        <category>队伍</category>
        
        <category>网站</category>
        
        <category>维护</category>
        
        
        <category>team</category>
        
      </item>
    
      <item>
        <title>友情链接 / Friends</title>
        <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;9046 / 初檬 &lt;a href=&quot;https://truemoe.cn/&quot;&gt;https://truemoe.cn/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;341 / Miss Daisy &lt;a href=&quot;http://www.team341.com/&quot;&gt;http://www.team341.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5515 / Blue Power Robotics (蓝色动力) &lt;a href=&quot;http://www.team5515.com/&quot;&gt;http://www.team5515.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;9048 / META ROBOTICS &lt;a href=&quot;http://www.metarobotics.org&quot;&gt;http://www.metarobotics.org&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1595 / The Dragons &lt;a href=&quot;http://www.1595dragons.org/&quot;&gt;http://www.1595dragons.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 17 Aug 2016 07:12:06 +0000</pubDate>
        <link>http://frc.hsefz.org/team/2016/08/17/friends.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/team/2016/08/17/friends.html</guid>
        
        <category>队伍</category>
        
        <category>链接</category>
        
        
        <category>team</category>
        
      </item>
    
      <item>
        <title>CommandGroup · 指令组</title>
        <description>&lt;p&gt;&lt;code&gt;ZYZ&lt;/code&gt; 是来自 &lt;code&gt;Zodiac&lt;/code&gt; 的巨神程序猿。作为一名 Xenial 星人，他有一个聪慧的大脑 INN。利用
INN，他可以 &lt;strong&gt;按顺序&lt;/strong&gt; 或者 &lt;strong&gt;同时&lt;/strong&gt; 完成一项或多项任务。&lt;/p&gt;

&lt;p&gt;在进行机器人编程的时候，难免会发现，一个 &lt;code&gt;Command&lt;/code&gt; 只能执行一个动作，或者是同时执行多个动作。
&lt;code&gt;WPILib&lt;/code&gt; 中，提供一种叫 &lt;code&gt;CommandGroup&lt;/code&gt; 的特殊 &lt;code&gt;Command&lt;/code&gt;, 可以用来进行 &lt;code&gt;Command&lt;/code&gt; 的&lt;strong&gt;顺序管理&lt;/strong&gt;。&lt;/p&gt;

&lt;h2&gt;创建 CommandGroup&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-group/create-1-59837c7e26087e3d42f8f06cc0752bef7ec6cd73431821a0e5c5f6caba0e97dd.png&quot; width=&quot;684&quot; height=&quot;497&quot; alt=&quot;command-group/create-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;右击项目 - &lt;code&gt;Add&lt;/code&gt; - &lt;code&gt;CommandGroup&lt;/code&gt; 输入名称即可创建一个指令组。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestCommandGroup&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommandGroup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;TestCommandGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 在这里插入你的代码&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在构造函数内插入代码就能描述一个指令组。&lt;/p&gt;

&lt;h2&gt;串联指令与并行指令&lt;/h2&gt;

&lt;p&gt;在 &lt;code&gt;CommandGroup&lt;/code&gt; 中，最常用的两个函数是 &lt;code&gt;addSequential(Command command)&lt;/code&gt; 与
&lt;code&gt;addParallel(Command command)&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;其中, &lt;code&gt;addSequential&lt;/code&gt; 是顺序执行一个指令(串联)，而 &lt;code&gt;addParallel&lt;/code&gt;
则是使该指令和上一指令同时进行(并行)，并在所有并列的指令都执行完成后再执行剩下的指令。&lt;/p&gt;

&lt;p&gt;我们再回到之前的 Command-based Robot 中，探索如何运行 INN 器官。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-based-robot/xenial-2-fc36582b34c71f65658137bd1519040ff923df78f538715a199a21e732e4c77b.png&quot; width=&quot;963&quot; height=&quot;665&quot; alt=&quot;command-based-robot/xenial-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;CommandGroup&lt;/code&gt; 的构造函数里插入你的代码：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;INNCommandGroup&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CommandGroup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;INNCommandGroup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addParallel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时, &lt;code&gt;Command1&lt;/code&gt; 先执行，接着 &lt;code&gt;Command2&lt;/code&gt; 与 &lt;code&gt;Command3&lt;/code&gt; 同时执行，
最后在两者都执行完成后才开始执行 &lt;code&gt;Command4&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：如果需要达到并联串联同时使用的效果，可以将一部分指令放在一个 CommandGroup 里，再将这个 CommandGroup 加到其他的 CommandGroup 里。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-group/create-2-9aa4bc029440311d2a1a0f04f34afd4f1afeb087305f413fc6ecbd1adc4686ff.png&quot; width=&quot;684&quot; height=&quot;497&quot; alt=&quot;command-group/create-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;比如这里可以将绿框内的 &lt;code&gt;Command&lt;/code&gt; 放在一个 &lt;code&gt;CommandGroup&lt;/code&gt; 里，标号 &lt;code&gt;7&lt;/code&gt;，
然后再创建一个 &lt;code&gt;CommandGroup&lt;/code&gt;：&lt;/p&gt;

&lt;h3&gt;Command7&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;CommandFinal&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addParallel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addParallel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// Command7 是一个 CommandGroup&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addSequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;消失的函数&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;initialize()&lt;/code&gt;, &lt;code&gt;execute()&lt;/code&gt;, &lt;code&gt;isFinished()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;interrupted()&lt;/code&gt; 这些本来继承于 &lt;code&gt;Command&lt;/code&gt; 的函数还需要写吗？&lt;/p&gt;

&lt;p&gt;&lt;code&gt;CommandGroup&lt;/code&gt; 继承了 &lt;code&gt;Command&lt;/code&gt; 类，已经帮你写好了这些函数，帮助你管理所有指令。因此你不需要再重载这些函数。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;感谢 Rocka Zhou 供稿&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Aug 2016 15:30:41 +0000</pubDate>
        <link>http://frc.hsefz.org/programming/2016/08/16/command-group.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/programming/2016/08/16/command-group.html</guid>
        
        <category>zyz的编程干货</category>
        
        <category>机器人</category>
        
        <category>Java</category>
        
        <category>编程</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>开源项目 / Open Source Projects</title>
        <description>&lt;div class=&quot;container&quot;&gt;
  &lt;h1 class=&quot;display-4&quot;&gt;开源项目 / Open Source Projects&lt;/h1&gt;
  &lt;h2&gt;Stronghold 2016&lt;/h2&gt;
  &lt;p&gt;We are happy to announce that all of our projects in Stronghold 2016 are open-sourced.&lt;/p&gt;
  &lt;div class=&quot;card-columns m-t-3&quot;&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;BreezeRobot&lt;/h4&gt;
          &lt;p&gt;Robot Program for Stronghold 2016
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/BreezeRobot&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Vision MJPEG Proxy&lt;/h4&gt;
          &lt;p&gt;Proxy will set up a web server to serve WebDashboard static files and proxy requests to vision camera server so as to make it possible for multiple clients to gain access to vision camera at the same time.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/stronghold-vision-mjpeg-proxy&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Vision OpenCV&lt;/h4&gt;
          &lt;p&gt;Vision process with OpenCV by Zodiac.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/stronghold-vision-opencv&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Vision WebDashboard&lt;/h4&gt;
          &lt;p&gt;Vision dashboard for Zodiac.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/stronghold-vision-webdashboard&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Video Capture&lt;/h4&gt;
          &lt;p&gt;Capture video from an mjpg stream and extract them into image sequence.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/stronghold-video-capture&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Website&lt;/h4&gt;
          &lt;p&gt;Zodiac Website source code.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/website&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
      &lt;div class=&quot;card card-block card-primary-info text-xs-center member-info&quot;&gt;
        &lt;blockquote class=&quot;card-blockquote&quot;&gt;
          &lt;h4&gt;Vision Script&lt;/h4&gt;
          &lt;p&gt;Process Management with PM2 on Raspberry Pi to start vision process.
&lt;/p&gt;
          &lt;a class=&quot;btn btn-outline-primary&quot; href=&quot;https://github.com/ZodiacEFZ/stronghold-vision-script&quot;&gt;Learn More&lt;/a&gt;
        &lt;/blockquote&gt;
      &lt;/div&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 13 Aug 2016 13:42:45 +0000</pubDate>
        <link>http://frc.hsefz.org/team/2016/08/13/open-source.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/team/2016/08/13/open-source.html</guid>
        
        <category>队伍</category>
        
        <category>开源</category>
        
        
        <category>team</category>
        
      </item>
    
      <item>
        <title>队员介绍 / Team Member</title>
        <description>&lt;div class=&quot;container m-t-3&quot;&gt;
  &lt;h1 class=&quot;display-4&quot;&gt;队员介绍 / Team Member&lt;/h1&gt;
  &lt;div class=&quot;card-columns m-t-3&quot;&gt;
    
      
      &lt;div class=&quot;card card-outline-success text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;Albert Chen (陈向东)&lt;/h4&gt;
            &lt;p&gt;From Engineer Technology Department of No.2 High school of East China Normal University. A Master Degree in Educational Technology of East China Normal University.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Mentor&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card card-outline-info text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;Clark (陈谦路)&lt;/h4&gt;
            &lt;p&gt;运动达人，昆虫控，喜欢捣鼓电子和机械。不过感觉只要是团队合作都很喜欢。&lt;br&gt; I have a wide variety of hobbies which allows me to negotiate with different groups of the team quite easily. Also my double personality, serious when working and silly when playing, helps me get along with my teammates well.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Captain&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card card-outline-info text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;GuoZL (郭子梁)&lt;/h4&gt;
            &lt;p&gt;我渣渣，涉猎较广泛。爱膜蛤 +1，兼任小学生手工副队长助理。&lt;br&gt; I have a broad mind, to an extend. In addition to help our group leader to do some team work, I also do a lot of &lt;em&gt;interesting&lt;/em&gt; handcrafts (for instance, the bumper and our wooden moat).
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Vice Captain&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card card-outline-warning text-xs-center member-info&quot;&gt;
        
        
        
        
          &lt;img class=&quot;card-img-top member-info-avatar&quot; src=&quot;https://www.gravatar.com/avatar/be0abc52003c2eb5006b5923f3486a61.jpg?s=512&quot;&gt;
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;SkyZH (迟遲)&lt;/h4&gt;
            &lt;p&gt;不会写程序，补番大魔王，爱膜蛤。&lt;br&gt; Experienced in software engineering. Maintain several open source projects. Focus on vision process.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Leader of Programming&lt;br&gt;Web Engineer&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card  text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;Xinjia (新家正太)&lt;/h4&gt;
            &lt;p&gt;喜欢工科，Inventor 玩得还不错，课余喜欢踢球和赛车游戏。&lt;br&gt; Good at robot controlling and CAD. Help the team figure out the way of building our robot.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Member of Electronical&lt;br&gt;Driver&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card card-outline-info text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;闵天淏 16 男&lt;/h4&gt;
            &lt;p&gt;MDZZ。&lt;br&gt; Phylosophy。&lt;br&gt; 队里负责锯木头以及布艺，简单来说就是技工。 单机游戏，烧耳机。 羽毛球，过度热爱公路车导致牙齿疼痛。 在交响乐团吹大管。
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Vice Captain&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card card-outline-warning text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;David Wang (汪达玮)&lt;/h4&gt;
            &lt;p&gt;Having no experienced skill, except strong ability to arrange wires, but learning fast. Preferring to solving problems efficiently. Believing that safety comes first, friendship comes second, competition comes the third.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Leader of Electronical&lt;br&gt;Safety Captain&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card  text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;杨致远&lt;/h4&gt;
            &lt;p&gt;机械工，酷爱足球和机器人，善于切割板材，制作零件。喜欢工程。
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Member of Electronical&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    
      
      &lt;div class=&quot;card  text-xs-center member-info&quot;&gt;
        
        
        
        
        
        &lt;div class=&quot;card-block&quot;&gt;
          &lt;blockquote class=&quot;card-blockquote&quot;&gt;
            &lt;h4&gt;Rocka Zhou (周亦哲)&lt;/h4&gt;
            &lt;p&gt;新人一枚，喜爱工程，乐于编程，MC忠粉。 Focus on robotics logic, and some other programming issues. Helpful in mechanic designing. Know how to use CAD.
&lt;/p&gt;
            &lt;footer&gt;&lt;em&gt;Member of Programming&lt;/em&gt;&lt;/footer&gt;
          &lt;/blockquote&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    

  &lt;/div&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 10 Aug 2016 13:22:19 +0000</pubDate>
        <link>http://frc.hsefz.org/team/2016/08/10/team-member.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/team/2016/08/10/team-member.html</guid>
        
        <category>队伍</category>
        
        <category>介绍</category>
        
        
        <category>team</category>
        
      </item>
    
      <item>
        <title>创客营第零天</title>
        <description>&lt;p&gt;今天各队员来到了奉贤中等职业学校，在放置好了机器人和所有零件后，我们将宿舍的床铺擦干净，并铺好了各自的床上用品。这里的住宿条件讲真不太好 orz = = 上铺还需要下铺的同学“放下来”（要不然爬梯子床会倒）……&lt;/p&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;col-md-6&quot;&gt;
    &lt;img src=&quot;http://frc.hsefz.org/assets/crc-training-0/IMG_2668-eef12f48a8264cc14e36a5339a503982e3995828e5bf584581670fbf42495ad5.JPG&quot; width=&quot;667&quot; height=&quot;1000&quot; alt=&quot;crc-training-0/IMG_2668.JPG&quot;&gt;
  &lt;/div&gt;
  &lt;div class=&quot;col-md-6&quot;&gt;
    &lt;img src=&quot;http://frc.hsefz.org/assets/crc-training-0/IMG_2657-6f2cfa848cb5323760e41f1fc150c68500c8ec4db51149733cd7fd6a1cef5af7.JPG&quot; class=&quot;m-b-1&quot; width=&quot;1000&quot; height=&quot;667&quot; alt=&quot;crc-training-0/IMG_2657.JPG&quot;&gt;

    &lt;img src=&quot;http://frc.hsefz.org/assets/crc-training-0/IMG_2672-3b3ddb8786f84fb1e68ae28b15a6c93715bf2176d252df8d16c08cee781e6d85.JPG&quot; width=&quot;1000&quot; height=&quot;667&quot; alt=&quot;crc-training-0/IMG_2672.JPG&quot;&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;今天晚上 6:30 左右我们开始参加创客营的入营培训活动，主要是强调了安全的事宜，特别是针对了安全老师巡查各教室的时候发现的安全隐患，比如护目镜的佩戴、手套的使用以及诸多应急情况的处理方式。一定程度上帮助我们发现了自身在人身保护方面的不足。毕竟，安全第一，一切活动都应该以安全作为第一要求、准则。&lt;/p&gt;

&lt;p&gt;之后，主要是针对创客营时间安排、作息时间，以及 CRC 比赛的一些事宜（比如规则、一些活动）的通知。总的来说，能够对我们再创客营期间的生活、制作，以及 CRC 比赛有很大的帮助。&lt;/p&gt;
</description>
        <pubDate>Wed, 03 Aug 2016 07:10:09 +0000</pubDate>
        <link>http://frc.hsefz.org/news/2016/08/03/first-day-training.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/news/2016/08/03/first-day-training.html</guid>
        
        <category>新闻</category>
        
        <category>创客营</category>
        
        <category>日常</category>
        
        
        <category>news</category>
        
      </item>
    
      <item>
        <title>和 Xenial 情感交流</title>
        <description>&lt;h2&gt;那些年，那个扫地机器人&lt;/h2&gt;

&lt;p&gt;SkyZH 研发了扫地机器人几个月后，终于意识到，只让扫地机器人自主扫地是远远不够的。
SkyZH 决定开发一套通讯系统，使用 Xenialware 上的 APP 控制扫地机器人打扫的房间。&lt;/p&gt;

&lt;p&gt;为了连接到机器人，SkyZH 引入了一套协议 &lt;code&gt;mDNS&lt;/code&gt;。
&lt;code&gt;mDNS&lt;/code&gt; 帮助计算机快速连接到 RoboRIO 机器人。
没有 &lt;code&gt;mDNS&lt;/code&gt; 协议，SkyZH 就必须在管理系统中获取机器人的 IP 地址，
然后在 APP 中手动输入。引入了这个协议后，SkyZH 就可以直接通过网址访问机器人了！
在烧写机器人固件时，SkyZH 确定了它的地址为 &lt;code&gt;roborio-2333-frc.local&lt;/code&gt;。
于是他就可以直接通过 &lt;code&gt;roborio-2333-frc.local&lt;/code&gt; 这个地址解析出机器人的局域网 IP
&lt;code&gt;10.23.33.xx&lt;/code&gt;，接着连接上去了。&lt;/p&gt;

&lt;h2&gt;Networktables&lt;/h2&gt;

&lt;p&gt;SkyZH 引入了 &lt;code&gt;Networktables&lt;/code&gt; 协议进行机器人数据的储存。
SkyZH 可以在 &lt;code&gt;Networktables&lt;/code&gt; 中创建表格，并在表格中储存键值对。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Networktables&lt;/code&gt; 由服务器和客户端组成。服务器一般运行在 RoboRIO 控制器上，
而客户端可以运行在任何地方。比如烧写在 RoboRIO 上的程序可以通过 &lt;code&gt;Networktables&lt;/code&gt;
获取一个值，电脑上的 &lt;code&gt;SmartDashboard&lt;/code&gt; 可以通过 &lt;code&gt;Networktables&lt;/code&gt; 获取机器人的传感器数据，
同时你也可以通过 Python 编写一个 &lt;code&gt;Networktables&lt;/code&gt; 程序。&lt;/p&gt;

&lt;h3&gt;打开测试的 NetworkTable&lt;/h3&gt;

&lt;p&gt;安装 WPIlib 插件之后，你就可以在 &lt;code&gt;&amp;lt;用户目录&amp;gt;/wpilib/tools&lt;/code&gt; 中找到应用程序。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/networking-roborio/smartdashboard-1-1c96b6a098f1554aa9203ac3c9f211e353fdc531bbbe0013c955ce39ae3b5eba.png&quot; width=&quot;1196&quot; height=&quot;839&quot; alt=&quot;networking-roborio/smartdashboard-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OutlineViewer&lt;/code&gt; 是一个 &lt;code&gt;Networktables&lt;/code&gt; 的监视工具。你可以在这个应用里看到所有的 &lt;code&gt;Networktables&lt;/code&gt; 数据。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/networking-roborio/nt-1-fc8c72f3421c6a17ab4eecc5af5ecf73c38d413e7991c40947f8e3e7708513e8.png&quot; width=&quot;345&quot; height=&quot;176&quot; alt=&quot;networking-roborio/nt-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;地址填写 &lt;code&gt;localhost&lt;/code&gt;，当然在调试机器人时要填写 &lt;code&gt;roborio-xxxx-frc.local&lt;/code&gt;。
本地调试则点击 &lt;code&gt;Start Server&lt;/code&gt; 运行服务器。调试机器人选择 &lt;code&gt;Start Client&lt;/code&gt; 运行客户端。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/networking-roborio/nt-2-c688272d90f10bbc4bce0a0d91a9902f7767c6391a9826ee717c2beadb62a670.png&quot; width=&quot;584&quot; height=&quot;392&quot; alt=&quot;networking-roborio/nt-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在这个界面中就可以监视所有数值。&lt;/p&gt;

&lt;h3&gt;在机器人控制器上存储数据&lt;/h3&gt;

&lt;p&gt;首先要从 Networktables 中获取一张表格。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;NetworkTable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NetworkTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接着就可以向表格中存储各种数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testInt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;233&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testString&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello, World!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;putString&lt;/code&gt;/&lt;code&gt;putNumber&lt;/code&gt; 在设置的键存在时，会覆盖之前的数据。但是，
如果 &lt;code&gt;test&lt;/code&gt; 原先设置成数字 233，而后又 &lt;code&gt;putString(&amp;quot;test&amp;quot;, &amp;quot;Hello!&amp;quot;)&lt;/code&gt; 就会报错。
键的类型是不能改变的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/networking-roborio/nt-3-6251d18fcda6b7ed911fa94aebcc7477ce61f0ae6ad91c3a8a0b2e67885a5518.png&quot; width=&quot;584&quot; height=&quot;392&quot; alt=&quot;networking-roborio/nt-3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;获取数据也十分简单。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testInt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testString&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Default String&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;函数的参数，第一个是要获取的键，第二个是如果该键不存在返回的默认值。&lt;/p&gt;

&lt;h3&gt;远程操控&lt;/h3&gt;

&lt;p&gt;视觉处理的数据经过控制器传输后，需要在电脑上处理。因此需要在电脑上远程连接 Networktables。&lt;/p&gt;

&lt;p&gt;在使用 &lt;code&gt;getTable&lt;/code&gt; 前调用初始化函数即可。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;NetworkTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTeam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9036&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;订阅事件&lt;/h3&gt;

&lt;p&gt;通过 Networktables 的事件订阅机制，每当有值被修改时，都可以调用用户指定的函数。
首先要定义一个回调接口，并在接口中编写回调函数。&lt;/p&gt;

&lt;p&gt;定义类成员变量 &lt;code&gt;tableListener&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ITableListener&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tableListener&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ITableListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;valueChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ITable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isNew&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testInt&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在获取到 &lt;code&gt;Table&lt;/code&gt; 对象后，注册事件处理器。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;ntable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addTableListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableListener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;事务&lt;/h3&gt;

&lt;p&gt;有一天 SkyZH 给扫地机器人编写了视觉处理确定打扫目标程序，程序返回了三个键值对的结果：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;(targetAngle, 180.0)
(tragetPosition, 20)
(tragetSpeed, 10)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;要进行存储，必然要经过以下几个步骤：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;putNumber(&quot;targetAngle&quot;, 180.0);
...
putNumber(&quot;tragetPosition&quot;, 20);
...
putNumber(&quot;tragetSpeed&quot;, 10);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;机器人要不断读取这些数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;getNumber(&quot;targetAngle&quot;, 0);
...
getNumber(&quot;tragetPosition&quot;, 0);
...
getNumber(&quot;tragetSpeed&quot;, 0);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那么问题来了。假设储存程序执行了两次，而这一期间机器人又读取了数据：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;事件流
1     targetAngle = 180
2     targetPosition = 20
3     targetSpeed = 10
4     get targetAngle           (=180)
5     get tragetPosition        (=20)
6     get targetSpeed           (=10)
7     targetAngle = 170
8     targetPosition = 25
9     targetSpeed = 13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一切正常。&lt;/p&gt;

&lt;p&gt;但如果三个数据不是同时写入或同时读取，或者读取指令因为网络原因没有同时到达，可能造成这种队列：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;事件流
1     targetAngle = 180
2     targetPosition = 20
3     targetSpeed = 10
4     get targetAngle           (=180)
5     targetAngle = 170
6     targetPosition = 25
7     get tragetPosition        (=25)
8     get targetSpeed           (=10)
9     targetSpeed = 13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样获取到的组合就是 &lt;code&gt;{ targetSpeed: 10, targetPosition: 25, targetAngle: 180 }&lt;/code&gt;，不是任何一次设置的值。&lt;/p&gt;

&lt;p&gt;解决方法是将这些指令一起执行。中间不插入任何代码。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;......
putNumber(&quot;targetAngle&quot;, 180.0);
putNumber(&quot;tragetPosition&quot;, 20);
putNumber(&quot;tragetSpeed&quot;, 10);
......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;......
getNumber(&quot;targetAngle&quot;, 0);
getNumber(&quot;tragetPosition&quot;, 0);
getNumber(&quot;tragetSpeed&quot;, 0);
......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者再使用一个临时的键值对 &lt;code&gt;isTransferred&lt;/code&gt;，当数据全部设置完毕后设置为 &lt;code&gt;false&lt;/code&gt;，仅在此时才能获取数据。&lt;/p&gt;

&lt;h3&gt;(拓展) 使用 Python 操作 Networktables&lt;/h3&gt;

&lt;p&gt;我们使用这个开源项目操作 &lt;code&gt;Networktables&lt;/code&gt;。&lt;a href=&quot;https://github.com/robotpy/pynetworktables&quot;&gt;pynetworktables&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 安装 Python3&lt;/li&gt;
&lt;li&gt; 将 Python 添加到环境变量中&lt;/li&gt;
&lt;li&gt; 在命令提示符中运行 &lt;code&gt;pip install pynetworktables&lt;/code&gt;。如果速度很慢请使用国内 pip 镜像。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编写 Python 程序。    &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;networktables&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NetworkTable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dashboard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NetworkTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SmartDashboard'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dashboard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;putNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保存为 &lt;code&gt;test.py&lt;/code&gt;，在命令提示符中切换到当前目录，执行 &lt;code&gt;python test.py&lt;/code&gt;。最后一个 &lt;code&gt;while&lt;/code&gt; 循环保证数据录入后再退出程序。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;SmartDashboard&lt;/h2&gt;

&lt;p&gt;除了使用 &lt;code&gt;Networktables&lt;/code&gt; 储存数据以外，&lt;code&gt;SmartDashboard&lt;/code&gt; 利用 &lt;code&gt;Networktables&lt;/code&gt;，
通过配置文件，可以方便地将储存在 &lt;code&gt;Networktables&lt;/code&gt; 数据展示在屏幕上。
&lt;code&gt;SmartDashboard&lt;/code&gt; 是机器人与计算机通讯的桥梁。&lt;/p&gt;

&lt;h3&gt;打开 SmartDashboard&lt;/h3&gt;

&lt;p&gt;安装 WPIlib 插件 之后，你就可以在 &lt;code&gt;&amp;lt;用户目录&amp;gt;/wpilib/tools&lt;/code&gt; 中找到应用程序。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/networking-roborio/smartdashboard-1-1c96b6a098f1554aa9203ac3c9f211e353fdc531bbbe0013c955ce39ae3b5eba.png&quot; width=&quot;1196&quot; height=&quot;839&quot; alt=&quot;networking-roborio/smartdashboard-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OutlineViewer&lt;/code&gt; 是一个 &lt;code&gt;Networktables&lt;/code&gt; 的监视工具。你可以在这个应用里看到所有的 &lt;code&gt;Networktables&lt;/code&gt; 数据。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SmartDashboard&lt;/code&gt; 是稳定的 &lt;code&gt;SmartDashboard&lt;/code&gt; 版本。推荐在比赛时使用。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sfx&lt;/code&gt; 是一个美观大气但充满 BUG 的 &lt;code&gt;SmartDashboard&lt;/code&gt; 程序。在调试时可以用它进行数据分析。&lt;/p&gt;

&lt;h3&gt;使用 SmartDashboard 显示调试数据&lt;/h3&gt;

&lt;p&gt;SmartDashboard 是一个静态类，可以使用其中的静态函数向 SmartDashboard 发送数据。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;n&quot;&gt;SmartDashboard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TestData&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23333&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在指令执行过程中不断调用发送数据的指令，数据就会不断刷新。在 &lt;code&gt;SmartDashboard&lt;/code&gt;
上将该数据设置成折线图格式，就可以显示出一段时间内的该数据点的所有数值。&lt;/p&gt;

&lt;h3&gt;为什么有 SmartDashboard 还要 Networktables?&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;SmartDashboard&lt;/code&gt; 是直接展现给操作员的面板，并且可以可视化展现调试数据。&lt;/p&gt;

&lt;p&gt;而视觉处理、图像处理等的临时数据必须要存储在 &lt;code&gt;Networktables&lt;/code&gt; 才能进行进一步展现和处理。
另外 &lt;code&gt;Networktables&lt;/code&gt; 提供了事件订阅功能，可以在其中的键值对发生更改时接收到通知。&lt;/p&gt;

&lt;h2&gt;练习&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; 阅读 &lt;code&gt;SmartDashboard&lt;/code&gt; 教程，学习如何查看现在运行的所有指令、现在 &lt;code&gt;DriveSubsystem&lt;/code&gt; 子系统执行的指令，
以及如何手动运行一个指令。
(&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/26401/l/255422-displaying-the-status-of-commands-and-subsystems&quot;&gt;教程&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt; 阅读 &lt;code&gt;SmartDashboard&lt;/code&gt; 教程，学习如何通过控制板选择自动阶段执行的指令。
(关键: 添加 &lt;code&gt;SendableChooser&lt;/code&gt; 到控制板, &lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/26401&quot;&gt;教程&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt; 添加一个 &lt;code&gt;DebugSubsystem&lt;/code&gt; 以及 &lt;code&gt;DebugCommand&lt;/code&gt;，实现在机器人程序运行期间，不断向 &lt;code&gt;SmartDashboard&lt;/code&gt; 写入一个随机数值。
(提示: 在 &lt;code&gt;DebugCommand&lt;/code&gt; 的 &lt;code&gt;execute&lt;/code&gt; 函数中进行数据存放)&lt;/li&gt;
&lt;li&gt; 通过 &lt;code&gt;Networktables&lt;/code&gt; 读取 &lt;code&gt;Test&lt;/code&gt; 表格中的三个数据 &lt;code&gt;speedMax&lt;/code&gt;, &lt;code&gt;speedDelta&lt;/code&gt; 和 &lt;code&gt;speedMin&lt;/code&gt;。注意使用事务。&lt;/li&gt;
&lt;li&gt; 在 DriverStation 的设置中将默认的调试面板改为 &lt;code&gt;SmartDashboard&lt;/code&gt; (调成 Java 模式)。&lt;/li&gt;
&lt;li&gt; 在 &lt;code&gt;Networktables&lt;/code&gt; 中添加 &lt;code&gt;SubTable&lt;/code&gt; 并存储数据 &lt;a href=&quot;http://first.wpi.edu/FRC/roborio/release/docs/java/edu/wpi/first/wpilibj/networktables/NetworkTable.html&quot;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;请善用官方教程和 WPILib 文档：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/13809&quot;&gt;FRC Java Programming 在线版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/26401&quot;&gt;SmartDashboard 教程 在线版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://first.wpi.edu/FRC/roborio/release/docs/java/&quot;&gt;WPILib API Reference 在线版&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Jul 2016 05:29:02 +0000</pubDate>
        <link>http://frc.hsefz.org/programming/2016/07/24/networking-with-roborio.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/programming/2016/07/24/networking-with-roborio.html</guid>
        
        <category>zc的编程干货</category>
        
        <category>机器人</category>
        
        <category>Java</category>
        
        <category>编程</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Xenial 的代码仓库 · 使用 git</title>
        <description>&lt;p&gt;很久以前，在 Xenial 星球上，人们都使用 XBrick 编写代码。一个名为 WindHub 软件公司迅猛发展，
从无到有，从一个人到十个人，从十个人到一百个人。要不是英勇的 ttt (又称 3t 卫士) 阻止了 CEO SkyZH 的阴谋，
Xenial 星球早就变成可怕程序猿的天下了！
刚开始 WindHub 公司里的 Xenial 人使用 Brick Device 储存源代码，
每天早晨都有一场例会，CEO SkyZH 当场收集 Brick Device，
在自己的 Xenialware 上查看每个人新增的程序段，
然后合并，拷贝给大家。终于有一天，SkyZH 累了，
于是他引入了 git 这种版本管理工具，开辟了一片新天地。
git 仓库就被建在被 Xenial 人奉为 &lt;em&gt;被遗忘的角落&lt;/em&gt; 中央。&lt;/p&gt;

&lt;h2&gt;下载与安装&lt;/h2&gt;

&lt;p&gt;git 是一个源代码管理工具。我们可以使用图形化界面的 git 进行源代码管理。&lt;/p&gt;

&lt;p&gt;在 &lt;a href=&quot;https://git-scm.com/&quot;&gt;git 官网&lt;/a&gt; 下载。点击 &lt;code&gt;Downloads for Windows&lt;/code&gt; 即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/download-1-a592e59ab4bd5a4eef960b8d5beaa69a4467cf633257f3b1d12be21b8b3451fc.png&quot; width=&quot;1436&quot; height=&quot;765&quot; alt=&quot;using-git/download-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;安装全部采用默认选项即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/install-1-557dfde398fa26b79389e949052abc4647199cb879c4ef417e423474fa1017ef.png&quot; width=&quot;582&quot; height=&quot;476&quot; alt=&quot;using-git/install-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/install-2-9b80d6e4268e2a5b3d6df4d9fe6bd0feba878d8fd3e32e1e43e4958df999105a.png&quot; width=&quot;582&quot; height=&quot;476&quot; alt=&quot;using-git/install-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/install-3-fba2a929d8b72bc536b6d266b375db50634ac1d33673c2515714d9b3a2a246b6.png&quot; width=&quot;582&quot; height=&quot;476&quot; alt=&quot;using-git/install-3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/install-4-047bedd569c85fe49b86d5272c30703ea48a481e20dd735be0d16456a0eb5734.png&quot; width=&quot;582&quot; height=&quot;476&quot; alt=&quot;using-git/install-4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/install-5-812b60ecc881c6215e14917f2f0aa64cf827cd9ac38b00341153f06f14b9a96e.png&quot; width=&quot;582&quot; height=&quot;476&quot; alt=&quot;using-git/install-5.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/install-6-254bbb7d394b8b513558451615fa8bfbdaa9e070c4eda707273c253239b38c5b.png&quot; width=&quot;582&quot; height=&quot;476&quot; alt=&quot;using-git/install-6.png&quot;&gt;&lt;/p&gt;

&lt;h2&gt;注册 GitHub 账号 &amp;amp; 设置密钥&lt;/h2&gt;

&lt;p&gt;在 &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; 上注册你的账号，请记住邮箱、用户名。&lt;/p&gt;

&lt;p&gt;点击右上头像 - &lt;code&gt;Settings&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/use-github-1-61fcd190f035f3bb5b24abd048b811a9da9bd0cf24586e25b14926c37f32fbcc.png&quot; width=&quot;1436&quot; height=&quot;765&quot; alt=&quot;using-git/use-github-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;选择 &lt;code&gt;SSH and GPG keys&lt;/code&gt;，点击 &lt;code&gt;New SSH Key&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/use-github-2-53c9905d3ccd64246024bc105a3318fc2bf38512e05d28a18bacd0c160cae385.png&quot; width=&quot;1436&quot; height=&quot;765&quot; alt=&quot;using-git/use-github-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;C:\Users\&amp;lt;用户名&amp;gt;\workspace&lt;/code&gt; (即你的 Eclipse 的 workspace 位置) 内点击右键打开 &lt;code&gt;Git GUI&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/use-github-3-54b1b42c8f7be1673f2803f97382a1052e1c3456b1116702023942ba4575d007.png&quot; width=&quot;1211&quot; height=&quot;859&quot; alt=&quot;using-git/use-github-3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;选择 &lt;code&gt;Show SSH Key&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/use-github-4-026978bf96ae5f541e831f090f6814f08eae0e7e309a0dbe8f701e652e616963.png&quot; width=&quot;561&quot; height=&quot;288&quot; alt=&quot;using-git/use-github-4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;选择 &lt;code&gt;Generate Key&lt;/code&gt; 密码留空点 OK。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/use-github-5-101f8986c1e409f4a00c9f67edb431a45743048fd7af017b87b7514577481782.png&quot; width=&quot;506&quot; height=&quot;347&quot; alt=&quot;using-git/use-github-5.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;将文本框内密钥拷贝到 GitHub 上，点击 &lt;code&gt;Add SSH Key&lt;/code&gt;。输入密码即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/use-github-6-c9512daf1cb7c7a00512f9e45cb3e14ff4555f51ab8465ec23830edceb839fe2.png&quot; width=&quot;486&quot; height=&quot;323&quot; alt=&quot;using-git/use-github-6.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/use-github-7-d1cf62f89ff3f2a615e5650e825d99037371ead3e779a207e3685a484d7c9d7c.png&quot; width=&quot;1436&quot; height=&quot;765&quot; alt=&quot;using-git/use-github-7.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;现在你就可以不用输入密码，通过这个 SSH 密钥连接到远程的代码仓库了。&lt;/p&gt;

&lt;h2&gt;Xenial 的代码仓库&lt;/h2&gt;

&lt;p&gt;Xenial 使用一种非常高级的仓库管理程序。仓库建在一个名为 &lt;em&gt;被遗忘的角落&lt;/em&gt; 的城区。
这里的人们天天只穿着运动鞋、鸭舌帽、短袖、牛仔裤，背着双肩包。
每天都坐在 Xenialware 前编程序。仓库就在 &lt;em&gt;被遗忘的角落&lt;/em&gt; 的中心地带。&lt;/p&gt;

&lt;p&gt;Xenial 星人使用一种非常高级的方法编程序。他们使用 XBrick 编写程序。
Xenial 星人将不同类型的方块按特定的顺序排列好，然后就能使用 Xenialware 执行程序。
他们用 git 这种高级的运输工具将方块运输到中心仓库。&lt;/p&gt;

&lt;p&gt;git 将每一次向仓库存数据的 &lt;strong&gt;内容&lt;/strong&gt; 叫做 &lt;code&gt;Commit(提交)&lt;/code&gt;。
&lt;code&gt;Commit&lt;/code&gt; 保存了程序相对于上次提交更改的部分。
创建了一个 &lt;code&gt;Commit&lt;/code&gt; 后，git 通过 &lt;code&gt;Push (推送)&lt;/code&gt; 的方式将 &lt;code&gt;Commit&lt;/code&gt; 从本地运输到远程仓库。
如果远程仓库无法接受这次 &lt;code&gt;Commit&lt;/code&gt;，它就不能被成功 &lt;code&gt;Push&lt;/code&gt;。
Xenial 星人于是不得不将远程仓库的所有 &lt;code&gt;Commit&lt;/code&gt; 拉取下来 &lt;code&gt;Merge (合并)&lt;/code&gt; 到自己的程序里，
再尝试提交。&lt;/p&gt;

&lt;p&gt;后来这套机制也被用在人类的代码管理上。人类使用 &lt;code&gt;git&lt;/code&gt; 建设了分布式的源代码管理库。&lt;/p&gt;

&lt;h2&gt;获取代码仓库 &amp;amp; 提交更改。&lt;/h2&gt;

&lt;p&gt;在 Eclipse workspace 文件夹内右键打开 &lt;code&gt;Git GUI&lt;/code&gt;，点击 &lt;code&gt;Clone Existing Repository&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/clone-1-d129caa892b6ae5c83186303c31600038aa7cb920f38b5a203365b17a8aea7f1.png&quot; width=&quot;545&quot; height=&quot;341&quot; alt=&quot;using-git/clone-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;输入远程仓库的地址 &lt;code&gt;git@github.com:SkyZH/BreezeRobot.git&lt;/code&gt;，以及目标目录 &lt;code&gt;BreezeRobot&lt;/code&gt;。
点击 &lt;code&gt;Clone&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：这个远程仓库需要经过授权才能访问。请联系 SkyZH。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/clone-2-19c688251627bd75a0f8fb5954c1e994d56af931d63d7348e96e8b20c3d22bca.png&quot; width=&quot;760&quot; height=&quot;341&quot; alt=&quot;using-git/clone-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;可能会出现一个弹框询问是否要信任 &lt;code&gt;GitHub&lt;/code&gt;，输入 &lt;code&gt;yes&lt;/code&gt; 点击 OK。&lt;/p&gt;

&lt;p&gt;以后都可以在 &lt;code&gt;workspace/BreezeRobot&lt;/code&gt; 目录下右击 - &lt;code&gt;Git GUI&lt;/code&gt; 打开 &lt;code&gt;仓库管理视图&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/clone-3-139d85c680f0d46434ae774a5d9b1b99fe14df9a58f4b5c69d3ed3e7f2e9108e.png&quot; width=&quot;1105&quot; height=&quot;684&quot; alt=&quot;using-git/clone-3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;现在我们将这个项目导入到 Eclipse 中。选择 &lt;code&gt;File&lt;/code&gt; - &lt;code&gt;Import&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/import-1-8c4014d1df6add75c6946af3cfeb8252da3a3ae7b71008cd859cdc6d5c80ab18.png&quot; width=&quot;1275&quot; height=&quot;849&quot; alt=&quot;using-git/import-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;选择 &lt;code&gt;Existing Projects into Workspace&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/import-2-0fde3ce9881b09c988e3691be75df1d507f4fe9983d13d8104149d598fd46af9.png&quot; width=&quot;684&quot; height=&quot;542&quot; alt=&quot;using-git/import-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;点击 &lt;code&gt;Browse...&lt;/code&gt; 选择目录，点击 Finish 即可完成导入。
在左侧 &lt;code&gt;Package Explorer&lt;/code&gt; 中就能找到导入的项目。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/import-3-a3f1bb116a8b73a4493eb013d3deac9eefa3301df1464505c847aa8e52dd18fe.png&quot; width=&quot;694&quot; height=&quot;840&quot; alt=&quot;using-git/import-3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;现在在 Eclipse 中随便编辑一个文件，比如 &lt;code&gt;Robot.java&lt;/code&gt;。保存后回到 &lt;code&gt;Git GUI&lt;/code&gt;。
点击 &lt;code&gt;Rescan&lt;/code&gt; - &lt;code&gt;Stage Changed&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/push-1-c8d5e3327cb152ccedbee2998fa1b3106cff36fab4de64860cf216d16bba0896.png&quot; width=&quot;1105&quot; height=&quot;684&quot; alt=&quot;using-git/push-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;Commit Message&lt;/code&gt; 中输入本次提交的说明。 (&lt;em&gt;比如：Add xxx, Modify xxx, Delete xxx&lt;/em&gt;)
然后点击 &lt;code&gt;Commit&lt;/code&gt;，再点击 &lt;code&gt;Push&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/push-2-4334747ce92eb56c147945b974620ebdabf3a408c6e71a7f752b84c40ef1daa2.png&quot; width=&quot;601&quot; height=&quot;559&quot; alt=&quot;using-git/push-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;再次点击 &lt;code&gt;Push&lt;/code&gt; 即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/fix-error-4-cdc9d6a5245329dee528966b44ecbf94d5ad7e0383a07908079b4ba40d975a86.png&quot; width=&quot;837&quot; height=&quot;363&quot; alt=&quot;using-git/fix-error-4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;绿色代表推送成功。然后在项目的 &lt;a href=&quot;https://github.com/SkyZH/BreezeRobot/&quot;&gt;GitHub 主页&lt;/a&gt; 上就可以看到最新的程序。
点击 &lt;code&gt;xx Commits&lt;/code&gt; 可以看到你提交的记录。&lt;/p&gt;

&lt;p&gt;那么 &lt;code&gt;Rescan&lt;/code&gt;, &lt;code&gt;Stage&lt;/code&gt;, &lt;code&gt;Commit&lt;/code&gt;, &lt;code&gt;Push&lt;/code&gt; 分别有什么作用呢？&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Rescan&lt;/code&gt; 扫描所有被修改过的文件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/push-3-d6c11aa37d8977caef5f4038483a831e20b001f046d2f4dfc6a5d86054afc2bd.png&quot; width=&quot;958&quot; height=&quot;704&quot; alt=&quot;using-git/push-3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Stage&lt;/code&gt; 将修改过的文件记录下来。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/push-4-a1802ed7248d394443541d85a6622ee6885753692c1ec9dfd293577cf816cfe9.png&quot; width=&quot;958&quot; height=&quot;704&quot; alt=&quot;using-git/push-4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Commit&lt;/code&gt; 把本地的程序保存到本地的代码仓库中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/push-5-e48e91a81459c2ca79382db6c50becb86500fb8ac179040fa2f47f452333c8c9.png&quot; width=&quot;958&quot; height=&quot;704&quot; alt=&quot;using-git/push-5.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Push&lt;/code&gt; 将本地代码仓库同步到远程代码仓库中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/push-6-159dd35125650c19b6e995967e1b408693ac64c44cb0a7bbc164d09caee2e950.png&quot; width=&quot;958&quot; height=&quot;704&quot; alt=&quot;using-git/push-6.png&quot;&gt;&lt;/p&gt;

&lt;h2&gt;修复错误&lt;/h2&gt;

&lt;p&gt;如果在点击 &lt;code&gt;Push&lt;/code&gt; 看到如下视图，这意味着你的本地仓库并不是最新的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/fix-error-1-99782132d2e391491d69043eaebaef6796bcbc86433cdc4ed670187714bbc652.png&quot; width=&quot;837&quot; height=&quot;384&quot; alt=&quot;using-git/fix-error-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;点击 &lt;code&gt;Remote&lt;/code&gt; - &lt;code&gt;Fetch from&lt;/code&gt; - &lt;code&gt;origin&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/fix-error-2-cec9560b2699eed0d4a28cceed23e1f6055c0704c6da8f74a93dd7c109b8aa1c.png&quot; width=&quot;1119&quot; height=&quot;699&quot; alt=&quot;using-git/fix-error-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;成功后点击 &lt;code&gt;Merge&lt;/code&gt; - &lt;code&gt;Local Merge&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/fix-error-3-a68b3f69edccb4cd4604fc2dae7b7d346aa65c1a6d832a96eb0e7dcde6a0ee41.png&quot; width=&quot;1127&quot; height=&quot;693&quot; alt=&quot;using-git/fix-error-3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;成功后再点击 Push 即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/fix-error-4-cdc9d6a5245329dee528966b44ecbf94d5ad7e0383a07908079b4ba40d975a86.png&quot; width=&quot;837&quot; height=&quot;363&quot; alt=&quot;using-git/fix-error-4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;然后在项目的 &lt;a href=&quot;https://github.com/SkyZH/BreezeRobot/&quot;&gt;GitHub 主页&lt;/a&gt; 上就可以看到最新的程序。&lt;/p&gt;

&lt;h2&gt;修复不了错误&lt;/h2&gt;

&lt;p&gt;在项目根目录下右键 - &lt;code&gt;Git Bash&lt;/code&gt;，输入：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git reset --hard origin/master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/using-git/fix-error-5-f6ff116ec65ff53f636c431dd3447f892c904ed38f1c440975a4ff65fc83f86d.png&quot; width=&quot;923&quot; height=&quot;232&quot; alt=&quot;using-git/fix-error-5.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;你本地所作的所有更改会全部消失，变成远程代码仓库的最新代码&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Jul 2016 09:08:16 +0000</pubDate>
        <link>http://frc.hsefz.org/programming/2016/07/08/using-git.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/programming/2016/07/08/using-git.html</guid>
        
        <category>zc的编程干货</category>
        
        <category>机器人</category>
        
        <category>Java</category>
        
        <category>编程</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>手舞足蹈的 Xenial 星人 · 指令式机器人</title>
        <description>&lt;p&gt;SkyZH 要对自己的机器人开始升级啦！因为之前的程序只能扫他扁平状的房间，而不能扫客厅，
因此他非常恼火。他想要让机器人自动扫大厅，但是又懒得写自动寻路算法。终于有一天，
他在 X购物 上购买的的 Xperia 手柄快递到家了！期待已久的他决定使用手柄控制机器人，
玩 Xenial 冲突累了的时候就可以让机器人扫地了。&lt;/p&gt;

&lt;p&gt;上次自动控制的代码是这个样子的：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;autonomous&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSafetyEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;servo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;servo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;servo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;servo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SkyZH 于是决定稍微修改一下程序。
&lt;strong&gt;（注意：以下几段代码中的部分函数，比如 &lt;code&gt;getSpeed&lt;/code&gt; 和 &lt;code&gt;getDirection&lt;/code&gt; 并不是官方 API 中的，这是胡编乱造的。 o(^▽^)o）&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;autonomous&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSafetyEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joystick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSpeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joystick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDirection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;机器人要在按住手柄上的 &lt;code&gt;1&lt;/code&gt; 键时停下，并开始扫地。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;autonomous&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSafetyEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joystick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSpeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joystick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDirection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isHeld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;servo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;servo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;servo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SkyZH 有一个很奇怪的习惯。他凭感觉将扫地机器人开到任意一个地方，按下扫地键后，他才会关注那里到底是什么。
如果机器人扫到他心爱的最新 Xenialware 笔记本电脑的话，他会很不开心的。因此松开 &lt;code&gt;1&lt;/code&gt; 键后，机器人应该立刻停下扫地工作。
&lt;code&gt;milliseconds()&lt;/code&gt; 可以获取到程序运行的毫秒数，&lt;strong&gt;但官方文档并没有这个函数&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;autonomous&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSafetyEnabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joystick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSpeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joystick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDirection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isHeld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;myRobot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;drive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;servo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isHeld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isHeld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;servo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;milliseconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__timer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isHeld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;servo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAngle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Timer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;好麻烦啊！SkyZH 为了偷懒，决定采用指令式编程来解决这个问题。&lt;/p&gt;

&lt;h2&gt;Xenial 星人的 INN&lt;/h2&gt;

&lt;p&gt;Xenial 星人通过名为 INN 的系统进行身体各个器官的通讯。
当 Xenial 星人想要起床时，INN 系统会从中心器官大脑向各个器官发送如下指令：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;腰部关节旋转到 90 度。（翻身，仰视）&lt;/li&gt;
&lt;li&gt;等待腰部旋转完成。&lt;/li&gt;
&lt;li&gt;腰关节旋转到 45 度。&lt;/li&gt;
&lt;li&gt;小腿关节旋转到 90 度。（由于 INN 发送指令的速度非常快，因此 3~4 可以被认为是同一时间发出的）&lt;/li&gt;
&lt;li&gt;等待 3~5 完成。&lt;/li&gt;
&lt;li&gt;开始转动 XEN 器官。&lt;/li&gt;
&lt;li&gt;等待两秒。&lt;/li&gt;
&lt;li&gt;停止 XEN 器官旋转。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-based-robot/xenial-1-d0c789da893bf63e0a6ac8a7b76eb41e6baf6d2368d4ef377dd11266368adf70.png&quot; width=&quot;963&quot; height=&quot;665&quot; alt=&quot;command-based-robot/xenial-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;总之最后 Xenial 人就变成这个样子了。&lt;/p&gt;

&lt;p&gt;我们把这个过程分解成如下几个指令：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; 初始操作：让腰部关节横轴旋转到 90 度。&lt;br&gt;
结束条件：腰部关节横轴已经旋转到 90 度了。&lt;/li&gt;
&lt;li&gt; 初始操作：腰关节纵轴旋转到 45 度。&lt;br&gt;
结束条件：已经旋转到了 45 度。&lt;/li&gt;
&lt;li&gt; 初始操作：小腿关节旋转到 90 度。&lt;br&gt;
结束条件：小腿已经旋转到 90 度了。&lt;/li&gt;
&lt;li&gt; 初始操作：转动 XEN 器官。&lt;br&gt;
结束条件：指令执行了两秒。&lt;br&gt;
终止操作：停止旋转 XEN 器官。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; 并行，其他顺序执行。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-based-robot/xenial-2-fc36582b34c71f65658137bd1519040ff923df78f538715a199a21e732e4c77b.png&quot; width=&quot;963&quot; height=&quot;665&quot; alt=&quot;command-based-robot/xenial-2.png&quot;&gt;&lt;/p&gt;

&lt;h2&gt;开始 Command-based Programming&lt;/h2&gt;

&lt;p&gt;SkyZH 想，我们也能利用这种 &lt;strong&gt;指令系统&lt;/strong&gt; 完成上面的扫地机器人。
于是他决定把这些资料交给你，让你帮忙完成这个程序。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;wpilib&lt;/code&gt; 提供了一整套 Command-based 的类与函数，可以帮助你使用指令来编写机器人程序。&lt;/p&gt;

&lt;p&gt;这个工程中最重要的两个基类就是 &lt;code&gt;Command/CommandGroup&lt;/code&gt; 和 &lt;code&gt;Subsystem&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;我们创建新工程来慢慢学习。&lt;/p&gt;

&lt;h3&gt;入门&lt;/h3&gt;

&lt;p&gt;打开 Eclipse，创建 &lt;code&gt;Robot Java Project&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-based-robot/tutorial-1-443422511fa9e7e9f7cc0375ffd095288c79c03121c2bd5a73a9d18ef04847eb.png&quot; width=&quot;684&quot; height=&quot;673&quot; alt=&quot;command-based-robot/tutorial-1.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;robot&lt;/code&gt; 包中有三个类：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-based-robot/tutorial-2-6dcbb9cce0c50d97dcbe167b3f2b433c04442643ba8847646332d14fdebd7512.png&quot; width=&quot;1272&quot; height=&quot;847&quot; alt=&quot;command-based-robot/tutorial-2.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Robot&lt;/code&gt; 类是机器人的引导类。通过 &lt;code&gt;Robot&lt;/code&gt; 可以控制自动期间、手动期间所需要执行的指令。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-based-robot/tutorial-3-a8d1e8d161e35518d8021a6b7c88283fb23ec237784b1da490ca1e52e2cab01a.png&quot; width=&quot;1272&quot; height=&quot;847&quot; alt=&quot;command-based-robot/tutorial-3.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;RobotMap&lt;/code&gt; 类是一个常量类，在这里写入每种控制器或传感器的端口号，这样在创建对象时就不用记录端口号了。
比如 &lt;code&gt;Servo servo = new Servo(RobotMap.CleanerServoPort);&lt;/code&gt; 另外在调试时也可以方便地更改端口号。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-based-robot/tutorial-4-08b6c3edced0b73c35d870ce21774a206d5b350b05e7b6f68187917c82a995c2.png&quot; width=&quot;1272&quot; height=&quot;847&quot; alt=&quot;command-based-robot/tutorial-4.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OI&lt;/code&gt; 类里保存了机器人所有传感器控制器的对象。在 &lt;code&gt;Robot&lt;/code&gt; 类初始化时会创建一个 &lt;code&gt;OI&lt;/code&gt; 对象，
我们可以通过 &lt;code&gt;OI&lt;/code&gt; 直接访问到机器人的所有设备。注意：&lt;code&gt;RobotMap&lt;/code&gt; 储存端口号，
而 &lt;code&gt;OI&lt;/code&gt; 中才真正创建了 &lt;code&gt;Servo&lt;/code&gt;, &lt;code&gt;RobotDrive&lt;/code&gt; 等可以通过程序操控的对象。&lt;/p&gt;

&lt;h3&gt;Subsystem (子系统)&lt;/h3&gt;

&lt;p&gt;子系统绑定了机器人的各个部件，比如马达、舵机，并把它抽象成机械臂、发射塔等装置，提供更加简单接口。&lt;/p&gt;

&lt;p&gt;在 &lt;code&gt;org.usfirst.frc.teamxxxx.robot.subsystems&lt;/code&gt; 包中右键新建，选择 &lt;code&gt;Others&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-based-robot/tutorial-5-09661d8653c106ada1d3aa7a093fbd24f596e8786d8927a236132a4cee3576fa.png&quot; width=&quot;684&quot; height=&quot;497&quot; alt=&quot;command-based-robot/tutorial-5.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;双击 &lt;code&gt;Subsystem&lt;/code&gt; 即可创建子系统。&lt;/p&gt;

&lt;p&gt;扫地机器人上有一个很奇怪的部件叫做 &lt;code&gt;XEN&lt;/code&gt;，它是一个可以 360 度旋转的天线，使用马达控制。
一般来说我们只需要它正转、反转、停止。因此我们可以这样抽象这个马达：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XenSubsystem&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Subsystem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;VictorSP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VictorSP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RobotMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MotorXenPort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initDefaultCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后在 &lt;code&gt;RobotMap&lt;/code&gt; 中指定端口号。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RobotMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MotorXenPort&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在创建 &lt;code&gt;XenSubsystem&lt;/code&gt; 对象后，我们就可以调用 &lt;code&gt;xen.forward()&lt;/code&gt; 等函数了。在 &lt;code&gt;Robot&lt;/code&gt; 中创建 &lt;code&gt;Subsystem&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Robot&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IterativeRobot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XenSubsystem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xenSubsystem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XenSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Command (指令)&lt;/h3&gt;

&lt;p&gt;我们可以使用指令控制子系统。在 &lt;code&gt;org.usfirst.frc.teamxxxx.robot.commands&lt;/code&gt; 包中右键新建，选择 &lt;code&gt;Others&lt;/code&gt;。
选择 &lt;code&gt;Command&lt;/code&gt;，输入名称即可创建指令。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XenCommand&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;XenCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isFinished&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;interrupted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在 &lt;code&gt;XenCommand&lt;/code&gt; 中有以下几个成员函数。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;XenCommand()&lt;/code&gt; 是类的构造函数。在这里使用 &lt;code&gt;requires(...)&lt;/code&gt; 声明这个类所需要的子系统。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;initialize()&lt;/code&gt; 是初始化函数。第一次运行这个指令时会执行它。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;为什么又要初始化函数又要构造函数？类在创建对象时，机器人的各个部件可能还没有初始化好。
要等机器人的事件系统完全运行时才能初始化。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;execute()&lt;/code&gt; 指令执行过程中不断调用这个函数。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;isFinished()&lt;/code&gt; 用于判断指令是否结束了。一般这里可以写“角度大于 180”或“时间到了”之类的语句。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;end()&lt;/code&gt; 是指令执行完毕后需要调用的函数。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;interrupted()&lt;/code&gt; 是指令被中断时调用的函数。比如手柄按钮按住时执行一个指令，指令没有执行完就松开了手柄，就会调用它。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;XenCommand&lt;/code&gt; 要实现 XEN 的转动。我们将这一操作抽象成 &lt;code&gt;Command&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;初始操作：转动 XEN 器官。&lt;br&gt;
结束条件：指令执行了两秒。&lt;br&gt;
终止操作：停止旋转 XEN 器官。&lt;/p&gt;

&lt;p&gt;可以使用 &lt;code&gt;setTimeout(double seconds)&lt;/code&gt; 设定定时器，&lt;code&gt;isTimedOut()&lt;/code&gt; 判断是否到时间。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XenCommand&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;XenCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;requires&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Robot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xenSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//声明依赖&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Robot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xenSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

     &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isFinished&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isTimedOut&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Robot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xenSubsystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;interrupted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后在 &lt;code&gt;Robot&lt;/code&gt; 中将这个指令设定为自动阶段的默认指令。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;autonomousInit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;autonomousCommand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;XenCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;autonomousCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;最后的话&lt;/h3&gt;

&lt;p&gt;FRC 机器人的 Command-based Robot 模式在国外的队伍中广泛使用。它的模块化、组件化的特点使得程序架构变得清楚，维护起来也更加方便。&lt;/p&gt;

&lt;p&gt;除了 &lt;code&gt;Robot&lt;/code&gt; 引导机器人主程序，&lt;code&gt;OI&lt;/code&gt; 保存机器人所有的手柄相关设置，&lt;code&gt;RobotMap&lt;/code&gt; 保存所有常量、端口映射以外，
&lt;code&gt;Subsystem&lt;/code&gt; 提供了抽象的功能，可以将一个控制器原来的十几个函数变成所需要的几个甚至一个函数，并增加可读性。
(比如将 &lt;code&gt;VictorSP&lt;/code&gt; 抽象为 &lt;code&gt;XenSubsystem&lt;/code&gt;)。而 &lt;code&gt;Command&lt;/code&gt; 提供了操作 &lt;code&gt;Subsystem&lt;/code&gt; 的可能，
使得我们可以通过发送指令的方式&lt;strong&gt;非阻塞地&lt;/strong&gt;执行命令，并且轻松地执行命令组。&lt;/p&gt;

&lt;p&gt;UPDATE: 由于 &lt;code&gt;OI&lt;/code&gt; 对象创建时机器人还没有完全初始化完毕，因此传感器、控制器对象直接在 &lt;code&gt;Subsystem&lt;/code&gt; 中创建。相关代码已修改。&lt;/p&gt;

&lt;h2&gt;练习&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; 自学 &lt;code&gt;CommandGroup&lt;/code&gt;。创建一个指令组，让 &lt;code&gt;XEN&lt;/code&gt; 正转两秒，反转两秒。&lt;br&gt;
&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/13809/l/241903-creating-groups-of-commands&quot;&gt;教程&lt;/a&gt;
&lt;a href=&quot;http://first.wpi.edu/FRC/roborio/release/docs/java/edu/wpi/first/wpilibj/command/CommandGroup.html&quot;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; 创建一个待机指令，相当于 &lt;code&gt;Timer.delay()&lt;/code&gt;，让 &lt;code&gt;XEN&lt;/code&gt; 正转两秒，停两秒，反转两秒。&lt;br&gt;
提示：想一想如何将一个操作抽象成 &lt;code&gt;Command&lt;/code&gt;? 一个 &lt;code&gt;Command&lt;/code&gt; 要有哪些要素？&lt;/li&gt;
&lt;li&gt; 修改这个待机指令的构造函数，使得创建指令对象时可以指定待机指令的待机时长。让 &lt;code&gt;XEN&lt;/code&gt; 正转两秒，停两秒，反转两秒，停三秒，正转两秒。&lt;br&gt;
提示：最后应该有这两句语句 &lt;code&gt;addSequential(new SuspendCommand(2))&lt;/code&gt; &lt;code&gt;addSequential(new SuspendCommand(3))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt; 自行查阅 &lt;code&gt;Subsystem&lt;/code&gt; 相关文档，让 &lt;code&gt;XenSubsystem&lt;/code&gt; 在没有任何指令执行的情况下执行一个默认指令 (Default Command)，让 XEN 反转。&lt;/li&gt;
&lt;li&gt; 尝试添加更多的控制器，比如底盘。&lt;br&gt;
提示：回忆一下创建一个控制器需要依次更改哪些类？创建一个指令需要依次更改哪些类？&lt;/li&gt;
&lt;li&gt; 学习使用并行执行指令组 (Parallel)，实现 &lt;code&gt;XEN&lt;/code&gt; 正方向转动两秒的同时让扫地机器人的底盘行走。&lt;/li&gt;
&lt;li&gt; (选做) 尝试自己阅读传感器相关文档，创建一个基于陀螺仪 (Gyro) 的 &lt;code&gt;PIDSubsystem&lt;/code&gt;。&lt;br&gt;
提示：&lt;code&gt;WPILib sensors&lt;/code&gt; 章节中讲传感器的用法，而 &lt;code&gt;PIDSubsystem&lt;/code&gt; 将如何创建传感器的子系统。&lt;/li&gt;
&lt;li&gt; (选做) 添加底盘的默认指令，添加手柄，默认情况下底盘用手柄控制。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;请善用下列资料：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wpilib.screenstepslive.com/s/4485/m/13809/c/88893&quot;&gt;Java Programming Guide - Command-based Programming 在线版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://first.wpi.edu/FRC/roborio/release/docs/java/&quot;&gt;WPILib API Reference 在线版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;第一个文档有 PDF 版。第二个文档可以在 Eclipse 中展开 &lt;code&gt;WPILib&lt;/code&gt; 包查看。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://frc.hsefz.org/assets/command-based-robot/api-reference-1-628a288958d0b034872846ab67fa4d65e5905fb2b12144fe5e1b773fe28476e1.png&quot; width=&quot;1272&quot; height=&quot;847&quot; alt=&quot;command-based-robot/api-reference-1.png&quot;&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Jul 2016 00:54:35 +0000</pubDate>
        <link>http://frc.hsefz.org/programming/2016/07/08/command-based-robot.html</link>
        <guid isPermaLink="true">http://frc.hsefz.org/programming/2016/07/08/command-based-robot.html</guid>
        
        <category>zc的编程干货</category>
        
        <category>机器人</category>
        
        <category>Java</category>
        
        <category>编程</category>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
